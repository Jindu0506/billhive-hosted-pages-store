this.PricingCardsLayout=function(){"use strict";const B={layout:"standalone",theme:{colors:{accent:"#5b5bd6",header:"#f2ededff",highlightPanel:"#f7f7fe",card:"#ffffff",inputComponent:"#f9fafb",text:"#111827",subText:"#6b7280",borders:"#e2e8f0",error:"#dc2626",success:"#10b981",warning:"#f59e0b",loading:"#f9fafb",disabled:"#f3f4f6"},typography:{fontFamily:"'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif",fontSizeHeading:"1.275rem",fontSizeSubHeading:"1.25rem",fontSizeBodyText:"0.9375rem",fontSizeSubText:"0.875rem",fontSizeFootNotes:"0.8125rem",headerFontWeight:"700",elementBorderRadius:"4px",modalBorderRadius:"8px"},shadows:{card:"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",modal:"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)"}}};function F(n){let e="";return n.theme&&typeof n.theme=="object"&&(n.theme.colors&&Object.entries(n.theme.colors).forEach(([i,a])=>{let t;switch(i){case"accent":t="--billhive-accent-color";break;case"header":t="--billhive-header-color";break;case"highlightPanel":t="--billhive-highlight-panel-color";break;case"card":t="--billhive-cards-color";break;case"inputComponent":t="--billhive-input-components-color";break;case"text":t="--billhive-text-color";break;case"subText":t="--billhive-sub-text-color";break;case"borders":t="--billhive-border-color";break;case"accentHover":t="--billhive-accent-hover";break;case"accentLight":t="--billhive-accent-light";break;default:t=`--billhive-${i.replace(/([A-Z])/g,"-$1").toLowerCase()}-color`}e+=`${t}: ${a};
    `}),n.theme.typography&&Object.entries(n.theme.typography).forEach(([i,a])=>{const t=`--billhive-${i.replace(/([A-Z])/g,"-$1").toLowerCase()}`;e+=`${t}: ${a};
    `}),n.theme.shadows&&Object.entries(n.theme.shadows).forEach(([i,a])=>{let t;switch(i){case"card":t="--billhive-card-shadow";break;case"modal":t="--billhive-modal-shadow";break;case"button":t="--billhive-button-shadow";break;default:t=`--billhive-${i}-shadow`}e+=`${t}: ${a};
    `}),n.layout&&(e+=`--billhive-layout: ${n.layout};
    `)),`
    :host {
      ${e.trim()}
    }
  `}const d={baseUrl:"http://localhost:4001",endpoints:{pricingTable:n=>`/products/${n}/pricing-table`,products:"/products",subscriptions:"/subscriptions"},headers:{"Content-Type":"application/json",Accept:"application/json"},getAuthHeaders(){return{...this.headers,"api-key":this.apiKey}},getPricingTableUrl(n=null){const e=n||this.productId;return`${this.baseUrl}${this.endpoints.pricingTable(e)}`}};typeof module<"u"&&module.exports&&(module.exports=d),typeof window<"u"&&(window.ApiConfig=d);class c extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.plans=[],this.allPlans=[],this.selectedPeriod=null,this.availablePeriods=[],this.isLoading=!1,this.apiError=null,this.theme=B,this.cardConfig=null,this.isCheckout=!1,this.productId="",this.apiKey=""}static get observedAttributes(){return["data-theme","product-id","api-key"]}connectedCallback(){this.productId=this.getAttribute("product-id"),this.apiKey=this.getAttribute("api-key");const e=this.getAttribute("data-theme");if(e)try{const i=JSON.parse(e);this.theme=i,this.cardConfig=i.card,i.card&&i.card.checkout!==void 0&&(this.isCheckout=i.card.checkout)}catch(i){console.error("Error parsing data-theme:",i)}console.log("=== Pricing Cards Input Attributes ==="),console.log("product-id:",this.productId),console.log("api-key:",this.apiKey),console.log("theme:",this.theme),console.log("cardConfig:",this.cardConfig),console.log("====================================="),this.loadPlansFromApi()}async loadPlansFromApi(){this.isLoading=!0,this.apiError=null,this.renderLoadingState();try{const e=`${d.baseUrl}/products/${this.productId}/pricing-table`;console.log("Fetching pricing data from:",e);const i=await fetch(e,{method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-api-key":this.apiKey}});if(!i.ok)throw new Error(`HTTP error! status: ${i.status}`);const a=await i.json();console.log("API Response:",a),this.allPlans=this.transformApiData(a),this.setupPeriodFiltering(),this.isLoading=!1,this.isCheckout?this.loadPlanSelectorComponent().then(()=>{this.render()}).catch(t=>{console.error("Error loading plan-selector, falling back to buttons:",t),this.isCheckout=!1,this.render()}):this.render()}catch(e){console.error("Error fetching pricing data:",e),this.apiError=e.message,this.isLoading=!1,this.allPlans=this.getDefaultPlans(),this.setupPeriodFiltering(),this.render()}}loadPlanSelectorComponent(){if(customElements.get("plan-selector"))return Promise.resolve();const e=document.querySelector('script[data-component="plan-selector"]');if(e)return new Promise(r=>{e.dataset.loaded==="true"?r():e.addEventListener("load",r)});const i=["./dist/web-components/plan-selector.min.js","../dist/web-components/plan-selector.min.js","/dist/web-components/plan-selector.min.js","dist/web-components/plan-selector.min.js"],a=document.currentScript||document.querySelector('script[src*="pricing-cards"]');let t=i[0];return a&&a.src&&(t=`${a.src.substring(0,a.src.lastIndexOf("/"))}/plan-selector.min.js`),new Promise((r,l)=>{const o=document.createElement("script");o.src=t,o.dataset.component="plan-selector",o.dataset.loaded="false",o.onload=()=>{o.dataset.loaded="true",console.log("Plan-selector component loaded successfully"),r()},o.onerror=()=>{console.error(`Failed to load plan-selector component from: ${t}`),l(new Error("Failed to load plan-selector component"))},document.head.appendChild(o)})}attributeChangedCallback(e,i,a){i!==a&&(this.isCheckout?this.loadPlanSelectorComponent().then(()=>{this.render()}).catch(t=>{console.error("Error loading plan-selector, falling back to buttons:",t),this.isCheckout=!1,this.render()}):this.render())}transformApiData(e){try{return e&&Array.isArray(e)?e.map(i=>{var a,t,r,l;return{id:i.ratePlanPriceId,name:i.name||i.externalName,description:i.description||i.customerDescription||"",price:i.price,currencyCode:i.currencyCode,period:((a=i.billingPeriod)==null?void 0:a.periodName)||((t=i.billingPeriod)==null?void 0:t.period),periodId:(r=i.billingPeriod)==null?void 0:r.id,periodName:(l=i.billingPeriod)==null?void 0:l.periodName,planLevel:i.planLevel||0,userNumber:1,features:i.addons||[],recommended:i.mostPopular||!1,tags:i.mostPopular||!1}}).sort((i,a)=>i.planLevel-a.planLevel):(console.warn("Invalid API data structure, using default plans"),this.getDefaultPlans())}catch(i){return console.error("Error transforming API data:",i),this.getDefaultPlans()}}setupPeriodFiltering(){const e=new Map;this.allPlans.forEach(i=>{i.periodId&&i.periodName&&e.set(i.periodId,i.periodName)}),this.availablePeriods=Array.from(e.entries()).map(([i,a])=>({id:i,name:a})),this.selectedPeriod=this.availablePeriods.length>0?this.availablePeriods[0].id:null,this.filterPlansByPeriod()}filterPlansByPeriod(){this.selectedPeriod?this.plans=this.allPlans.filter(e=>e.periodId===this.selectedPeriod):this.plans=this.allPlans}handlePeriodChange(e){this.selectedPeriod=e,this.filterPlansByPeriod(),this.render()}getCurrencySymbol(e){return{USD:"$",EUR:"€",GBP:"£",INR:"₹",JPY:"¥",CAD:"C$",AUD:"A$",CHF:"CHF",CNY:"¥",SEK:"kr",NZD:"NZ$",MXN:"$",SGD:"S$",HKD:"HK$",NOK:"kr",TRY:"₺",RUB:"₽",BRL:"R$",ZAR:"R",KRW:"₩"}[e==null?void 0:e.toUpperCase()]||e||"$"}renderLoadingState(){this.shadowRoot.innerHTML=`
      ${this.getStyles()}
      <div class="pricing-display">
        <div class="loading-container">
          <div class="loading-spinner"></div>
          <p>Loading pricing plans...</p>
        </div>
      </div>
    `}renderErrorState(){this.shadowRoot.innerHTML=`
      ${this.getStyles()}
      <div class="pricing-display">
        <div class="error-container">
          <div class="error-icon">⚠️</div>
          <h3>Unable to load pricing plans</h3>
          <p>${this.apiError}</p>
          <button class="retry-btn" onclick="location.reload()">Retry</button>
        </div>
      </div>
    `}getDefaultPlans(){return[{id:"starter",name:"Starter",description:"If you are a small business amn please select this plan",price:99,period:"yr",userNumber:1,features:["Up to 5 projects","10GB storage","Basic support","Core features"],recommended:!1,tags:!1},{id:"pro",name:"Pro",description:"If you are a small business amn please select this plan",price:299,period:"yr",userNumber:5,features:["Unlimited projects","100GB storage","Priority support","Advanced features","Team collaboration","Analytics dashboard"],recommended:!0,tags:!0},{id:"enterprise",name:"Enterprise",description:"If you are a small business amn please select this plan",price:599,period:"yr",userNumber:20,features:["Everything in Professional","1TB storage","24/7 phone support","Custom integrations","Advanced security","Dedicated account manager"],recommended:!1,tags:!1}]}renderPeriodToggle(){return this.availablePeriods.length<=1?"":`
      <div class="period-toggle">
        <div class="period-buttons">
          ${this.availablePeriods.map(e=>`
            <button class="period-btn ${this.selectedPeriod===e.id?"active":""}" 
                    data-period-id="${e.id}">
              ${e.name}
            </button>
          `).join("")}
        </div>
      </div>
    `}handlePlanSelect(e){const i=new CustomEvent("plan-selected",{detail:{selectedPlan:e},bubbles:!0});this.dispatchEvent(i)}render(){var i,a;console.log("render function");const e=((a=(i=this.cardConfig)==null?void 0:i.layout)==null?void 0:a.layoutMode)==="grid";console.log("config check :",this.cardConfig,e),this.shadowRoot.innerHTML=`
      ${this.getStyles()}
      <div class="pricing-display">
        <div class="nk-block-head-sub"><span>Pricing</span></div>
        <div class="pricing-header">
          <h2 class="fw-normal">Choose Suitable Plan</h2>
          <p>You can change your plan any time by upgrade your plan</p>
        </div>
        ${this.renderPeriodToggle()}
        <div class="pricing-container">
          ${e?this.renderGridLayout():this.plans.map(t=>this.renderPlan(t)).join("")}
        </div>
      </div>
    `,this.shadowRoot.querySelectorAll(".btn-primary").forEach(t=>{t.addEventListener("click",r=>{const l=r.target.dataset.planId,o=this.plans.find(s=>s.id===l);this.handlePlanSelect(o)})}),this.shadowRoot.querySelectorAll(".period-btn").forEach(t=>{t.addEventListener("click",r=>{const l=r.target.dataset.periodId;this.handlePeriodChange(l)})})}renderGridLayout(){console.log("Render GRID");const e=new Set;this.plans.forEach(r=>{r.features&&Array.isArray(r.features)&&r.features.forEach(l=>e.add(l))});const i=Array.from(e),a=`<svg class="table-check-icon" width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <circle cx="10" cy="10" r="9" fill="#10b981" stroke="#10b981" stroke-width="2"/>
      <path d="M6 10L9 13L14 7" stroke="white" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round"/>
    </svg>`,t=`<svg class="table-cross-icon" width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M7 7L13 13M13 7L7 13" stroke="#9ca3af" stroke-width="2" stroke-linecap="round"/>
    </svg>`;return`
      <div class="pricing-table-wrapper">
        <table class="pricing-table">
          <thead>
            <tr class="table-header-row">
              <th class="table-header-feature">Plans & Features</th>
              ${this.plans.map(r=>`
                <th class="table-header-plan ${r.recommended?"recommended":""}">
                  ${r.recommended?'<span class="table-badge">Recommended</span>':""}
                  <div class="table-plan-name">${r.name}</div>
                  <div class="table-plan-price">
                    <span class="table-currency">${this.getCurrencySymbol(r.currencyCode)}</span>
                    <span class="table-price-value">${r.price}</span>
                    <span class="table-period">/${r.period}</span>
                  </div>
                  <div class="table-plan-description">${r.description}</div>
                  <div class="table-plan-action">
                    ${this.isCheckout?`
                      <bh-plan-selector
                        data-plan-id="${r.id}"
                        data-plan-name="${r.name}"
                        data-plan-price="${r.price}"
                        data-plan-period="year"
                        data-recommended="${r.recommended||!1}"
                        data-button-text="${this.config.buttonText||"Get Started"}"
                      ></bh-plan-selector>
                    `:`
                      <button class="btn btn-primary table-btn" data-plan-id="${r.id}">
                        ${this.config.buttonText||"Get Started"}
                      </button>
                    `}
                  </div>
                </th>
              `).join("")}
            </tr>
          </thead>
          <tbody>
            ${i.map((r,l)=>`
              <tr class="table-feature-row">
                <td class="table-feature-name">${r}</td>
                ${this.plans.map(o=>{const s=o.features&&o.features.includes(r);return`
                    <td class="table-feature-value ${o.recommended?"recommended-col":""}">
                      ${s?a:t}
                    </td>
                  `}).join("")}
              </tr>
            `).join("")}
          </tbody>
        </table>
      </div>
    `}renderPlan(e){var i,a,t,r;if(((a=(i=this.cardConfig)==null?void 0:i.layout)==null?void 0:a.layoutMode)==="card")return`
        <div class="card card-bordered pricing text-center ${e.recommended?"recommend":""}">
          ${e.recommended?'<span class="pricing-badge">Recommended</span>':""}
          <div class="pricing-body">
            <div class="pricing-title w-220px mx-auto">
              <h5 class="title">${e.name}</h5>
              <span class="sub-text">${e.description}</span>
            </div>
            <div class="pricing-amount">
              <div class="amount">
                ${this.getCurrencySymbol(e.currencyCode)}${e.price} <span>/${e.period}</span>
              </div>
              <span class="bill">${e.userNumber} User, Billed ${e.period}</span>
            </div>
            <div class="pricing-action">
              ${this.isCheckout?`
                <bh-plan-selector
                  data-plan-id="${e.id}"
                  data-plan-name="${e.name}"
                  data-plan-price="${e.price}"
                  data-plan-period="year"
                  data-recommended="${e.recommended||!1}"
                  data-button-text="${this.config.buttonText||"Select Plan"}"
                ></bh-plan-selector>
              `:`
                <button class="btn btn-primary" data-plan-id="${e.id}">
                  Test button
                </button>
              `}
            </div>
          </div>
        </div>
      `;if(((r=(t=this.cardConfig)==null?void 0:t.layout)==null?void 0:r.layoutMode)==="horizontal-card"){const l=`<svg class="feature-check-icon" width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
        <circle cx="10" cy="10" r="10" fill="var(--billhive-accent-color, #6576ff)"/>
        <path d="M6 10L9 13L14 7" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>`,o=e.features||[];return`
        <div class="horizontal-card ${e.recommended?"recommend":""}">
          ${e.recommended?'<span class="pricing-badge">Recommended</span>':""}
          <div class="horizontal-card-content">
            <div class="horizontal-card-left">
              <h3 class="horizontal-card-title">${e.name}</h3>
              <p class="horizontal-card-description">${e.description}</p>
              ${o.length>0?`
                <div class="horizontal-card-features">
                  <h4 class="features-heading">What's included</h4>
                  <ul class="features-list">
                    ${o.map(s=>`
                      <li class="feature-item">
                        ${l}
                        <span>${s}</span>
                      </li>
                    `).join("")}
                  </ul>
                </div>
              `:""}
            </div>
            <div class="horizontal-card-right">
              <div class="horizontal-card-pricing">
                <p class="pricing-label">Starting at</p>
                <div class="pricing-amount-horizontal">
                  <span class="currency-symbol">${this.getCurrencySymbol(e.currencyCode)}</span>
                  <span class="price-value">${e.price}</span>
                  <span class="period-text">/${e.period}</span>
                </div>
                <div class="pricing-action-horizontal">
                  ${this.isCheckout?`
                    <bh-plan-selector
                      data-plan-id="${e.id}"
                      data-plan-name="${e.name}"
                      data-plan-price="${e.price}"
                      data-plan-period="year"
                      data-recommended="${e.recommended||!1}"
                      data-button-text="${this.config.buttonText||"Select Plan"}"
                    ></bh-plan-selector>
                  `:`
                    <button class="btn btn-primary btn-horizontal" data-plan-id="${e.id}">
                      ${this.config.buttonText||"Start your trial"}
                    </button>
                  `}
                </div>
              </div>
            </div>
          </div>
        </div>
      `}else return""}getStyles(){var r,l,o,s,h,b,f,p,m,v,g,u,y,x,w,z,$,k,P,C,S,E,L,A,T,I,j,M,R,N;console.log("getStyles :",this.theme,this.cardConfig);const e=((l=(r=this.cardConfig)==null?void 0:r.style)==null?void 0:l.shadow)||"0 2px 8px rgba(0, 0, 0, 0.08)",i=((s=(o=this.cardConfig)==null?void 0:o.style)==null?void 0:s.borderColor)||"#dbdfea",a=((b=(h=this.cardConfig)==null?void 0:h.style)==null?void 0:b.spacing)||"20px",t=((p=(f=this.cardConfig)==null?void 0:f.layout)==null?void 0:p.columns)||4;return`
      <style>
        ${F(this.theme)}

        :host {
          display: block;
          font-family: var(--billhive-font-family, "Roboto", sans-serif, "Helvetica Neue", Arial, "Noto Sans");
        }

        * {
          box-sizing: border-box;
        }

        .pricing-display {
          padding: 1.5rem;
          background-color: var(--billhive-highlight-panel-color, #ffffff);
        }

        .nk-block-head-sub {
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          text-transform: uppercase;
          color: var(--billhive-sub-text-color, #8094ae);
          font-weight: 500;
          letter-spacing: 0.06em;
          margin-bottom: 0.5rem;
          font-family: var(--billhive-font-family);
        }

        .pricing-header {
          margin-bottom: 2rem;
        }

        .pricing-header h2 {
          font-size: var(--billhive-font-size-heading, 0.8rem);
          color: var(--billhive-text-color, #364a63);
          margin: 0 0 0.5rem 0;
          font-weight: var(--billhive-header-font-weight, 400);
          font-family: var(--billhive-font-family);
        }

        .fw-normal {
          font-weight: 400 !important;
        }

        .pricing-header p {
          color: var(--billhive-sub-text-color, #8094ae);
          margin: 0;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-family: var(--billhive-font-family);
        }

        .period-toggle {
          display: flex;
          justify-content: center;
          margin-bottom: 2rem;
        }

        .period-buttons {
          display: inline-flex;
          background-color: var(--billhive-disabled-color, #f5f6fa);
          border-radius: var(--billhive-element-border-radius, 6px);
          padding: 4px;
          gap: 2px;
        }

        .period-btn {
          padding: 8px 20px;
          border: none;
          background: transparent;
          color: var(--billhive-sub-text-color, #8094ae);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-weight: 500;
          border-radius: var(--billhive-element-border-radius, 4px);
          cursor: pointer;
          transition: all 0.2s ease;
          white-space: nowrap;
          font-family: var(--billhive-font-family);
        }

        .period-btn:hover {
          color: var(--billhive-text-color, #364a63);
          background-color: var(--billhive-accent-light, rgba(101, 118, 255, 0.1));
        }

        .period-btn.active {
          background-color: var(--billhive-accent-color, #6576ff);
          color: var(--billhive-header-color, #fff);
          box-shadow: var(--billhive-button-shadow, 0 2px 4px rgba(101, 118, 255, 0.3));
        }

        .period-btn.active:hover {
          background-color: var(--billhive-accent-hover, #5664e3);
          color: var(--billhive-header-color, #fff);
        }

        .pricing-container {
          display: ${((v=(m=this.cardConfig)==null?void 0:m.layout)==null?void 0:v.layoutMode)==="grid"?"block":((u=(g=this.cardConfig)==null?void 0:g.layout)==null?void 0:u.layoutMode)==="horizontal-card"||((x=(y=this.cardConfig)==null?void 0:y.layout)==null?void 0:x.layoutMode)==="list"?"flex":(((z=(w=this.cardConfig)==null?void 0:w.layout)==null?void 0:z.layoutMode)==="card","grid")};
          ${((k=($=this.cardConfig)==null?void 0:$.layout)==null?void 0:k.layoutMode)==="horizontal-card"||((C=(P=this.cardConfig)==null?void 0:P.layout)==null?void 0:C.layoutMode)==="list"?"flex-direction: column;":((E=(S=this.cardConfig)==null?void 0:S.layout)==null?void 0:E.layoutMode)==="card"?`grid-template-columns: repeat(${t}, 1fr);`:((A=(L=this.cardConfig)==null?void 0:L.layout)==null?void 0:A.layoutMode)==="grid"?"":`grid-template-columns: repeat(${t}, 1fr);`}
          gap: ${((I=(T=this.cardConfig)==null?void 0:T.layout)==null?void 0:I.layoutMode)==="grid"?"0":a};
          margin-bottom: 2rem;
          max-width: ${((M=(j=this.cardConfig)==null?void 0:j.layout)==null?void 0:M.layoutMode)==="grid"?"100%":((N=(R=this.cardConfig)==null?void 0:R.layout)==null?void 0:N.layoutMode)==="horizontal-card"?"1200px":"1000px"};
          margin-left: auto;
          margin-right: auto;
        }

        .card {
          position: relative;
          display: flex;
          flex-direction: column;
          min-width: 0;
          word-wrap: break-word;
          background-color: var(--billhive-cards-color, #fff);
          background-clip: border-box;
          border: 1px solid ${i};
          border-radius: var(--billhive-element-border-radius, 4px);
          box-shadow: ${e};
        }

        .card-bordered {
          border: 1px solid ${i};
        }

        .pricing {
          position: relative;
        }

        .pricing.text-center {
          text-align: center;
        }

        .pricing.recommend {
          position: relative;
        }

        .pricing-badge {
          position: absolute;
          top: 15px;
          right: 15px;
          background: var(--billhive-accent-color, #6576ff);
          color: var(--billhive-header-color, #fff);
          padding: 0.25rem 0.75rem;
          border-radius: var(--billhive-element-border-radius, 3px);
          font-size: var(--billhive-font-size-foot-notes, 0.55rem);
          font-weight: var(--billhive-header-font-weight, 600);
          text-transform: uppercase;
          letter-spacing: 0.01em;
          z-index: 1;
          display: inline-block;
          font-family: var(--billhive-font-family);
        }

        .pricing-body {
          padding: 2.25rem 1rem;
        }

        .pricing-title {
          margin-bottom: 1.75rem;
        }

        .w-220px {
          max-width: 220px;
          width: 100%;
        }

        .mx-auto {
          margin-left: auto !important;
          margin-right: auto !important;
        }

        .title {
          font-size: var(--billhive-font-size-heading, 0.7rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          margin: 0 0 0.25rem 0;
          font-family: var(--billhive-font-family);
          word-wrap: break-word;
          text-align: center;
        }

        .sub-text {
          display: block;
          color: var(--billhive-sub-text-color, #8094ae);
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          line-height: 1.4;
          font-family: var(--billhive-font-family);
          word-wrap: break-word;
          text-align: center;
        }

        .pricing-amount {
          margin-bottom: 1.75rem;
        }

        .amount {
          font-size: var(--billhive-font-size-heading, 0.8rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-accent-color, #526484);
          line-height: 1;
          margin-bottom: 0.5rem;
          font-family: var(--billhive-font-family);
        }

        .amount span {
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          color: var(--billhive-sub-text-color, #8094ae);
          font-weight: 400;
        }

        .bill {
          display: block;
          color: var(--billhive-sub-text-color, #8094ae);
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          font-family: var(--billhive-font-family);
        }

        .pricing-action {
          padding-top: 0.25rem;
        }

        .btn {
          display: inline-block;
          font-weight: var(--billhive-header-font-weight, 600);
          text-align: center;
          white-space: nowrap;
          vertical-align: middle;
          user-select: none;
          border: 1px solid transparent;
          padding: 0.4375rem 1.125rem;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          line-height: 1.5;
          border-radius: var(--billhive-element-border-radius, 4px);
          transition: all 0.15s ease-in-out;
          cursor: pointer;
          text-decoration: none;
          font-family: var(--billhive-font-family);
        }

        .btn-primary {
          color: var(--billhive-header-color, #fff);
          background-color: var(--billhive-accent-color, #6576ff);
          border-color: var(--billhive-accent-color, #6576ff);
        }

        .btn-primary:hover {
          color: var(--billhive-header-color, #fff);
          background-color: var(--billhive-accent-hover, #5664e3);
          border-color: var(--billhive-accent-hover, #5664e3);
          box-shadow: var(--billhive-button-shadow, 0 2px 4px rgba(101, 118, 255, 0.3));
        }

        .btn-primary:focus {
          outline: 0;
          box-shadow: var(--billhive-button-shadow, 0 0 0 0.2rem rgba(101, 118, 255, 0.25));
        }

        /* Horizontal Card Layout Styles */
        .horizontal-card {
          position: relative;
          background-color: var(--billhive-cards-color, #fff);
          border: 1px solid ${i};
          border-radius: var(--billhive-element-border-radius, 8px);
          box-shadow: ${e};
          overflow: hidden;
          transition: all 0.3s ease;
        }

        .horizontal-card:hover {
          box-shadow: 0 4px 16px rgba(0, 0, 0, 0.12);
        }

        .horizontal-card.recommend {
          border-color: var(--billhive-accent-color, #6576ff);
          box-shadow: 0 4px 16px rgba(101, 118, 255, 0.15);
        }

        .horizontal-card-content {
          display: flex;
          flex-direction: row;
          min-height: 280px;
        }

        .horizontal-card-left {
          flex: 1;
          padding: 2.5rem;
          background-color: var(--billhive-cards-color, #fff);
        }

        .horizontal-card-right {
          width: 320px;
          padding: 2.5rem;
          background-color: var(--billhive-highlight-panel-color, #f5f6fa);
          display: flex;
          align-items: center;
          justify-content: center;
        }

        .horizontal-card-title {
          font-size: var(--billhive-font-size-heading, 1.5rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          margin: 0 0 1rem 0;
          font-family: var(--billhive-font-family);
        }

        .horizontal-card-description {
          font-size: var(--billhive-font-size-body-text, 0.95rem);
          color: var(--billhive-sub-text-color, #8094ae);
          line-height: 1.6;
          margin: 0 0 2rem 0;
          font-family: var(--billhive-font-family);
        }

        .horizontal-card-features {
          margin-top: 1.5rem;
        }

        .features-heading {
          font-size: var(--billhive-font-size-sub-text, 0.875rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          margin: 0 0 1rem 0;
          text-transform: uppercase;
          letter-spacing: 0.05em;
          font-family: var(--billhive-font-family);
        }

        .features-list {
          list-style: none;
          padding: 0;
          margin: 0;
        }

        .feature-item {
          display: flex;
          align-items: center;
          gap: 0.75rem;
          margin-bottom: 0.875rem;
          font-size: var(--billhive-font-size-body-text, 0.875rem);
          color: var(--billhive-text-color, #364a63);
          font-family: var(--billhive-font-family);
        }

        .feature-check-icon {
          flex-shrink: 0;
          width: 20px;
          height: 20px;
        }

        .horizontal-card-pricing {
          text-align: center;
          width: 100%;
        }

        .pricing-label {
          font-size: var(--billhive-font-size-sub-text, 0.75rem);
          color: var(--billhive-sub-text-color, #8094ae);
          text-transform: uppercase;
          letter-spacing: 0.05em;
          margin: 0 0 0.75rem 0;
          font-weight: 500;
          font-family: var(--billhive-font-family);
        }

        .pricing-amount-horizontal {
          display: flex;
          align-items: baseline;
          justify-content: center;
          margin-bottom: 2rem;
        }

        .currency-symbol {
          font-size: var(--billhive-font-size-heading, 1.5rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-accent-color, #6576ff);
          font-family: var(--billhive-font-family);
        }

        .price-value {
          font-size: var(--billhive-font-size-heading, 3rem);
          font-weight: var(--billhive-header-font-weight, 700);
          color: var(--billhive-accent-color, #6576ff);
          line-height: 1;
          font-family: var(--billhive-font-family);
        }

        .period-text {
          font-size: var(--billhive-font-size-body-text, 1rem);
          color: var(--billhive-sub-text-color, #8094ae);
          margin-left: 0.25rem;
          font-family: var(--billhive-font-family);
        }

        .pricing-action-horizontal {
          margin-top: 1.5rem;
        }

        .btn-horizontal {
          width: 100%;
          padding: 0.875rem 2rem;
          font-size: var(--billhive-font-size-body-text, 1rem);
          font-weight: var(--billhive-header-font-weight, 600);
        }

        /* Grid/Table Layout Styles */
        .pricing-table-wrapper {
          width: 100%;
          overflow-x: auto;
          margin-bottom: 2rem;
        }

        .pricing-table {
          width: 100%;
          border-collapse: collapse;
          background-color: var(--billhive-cards-color, #fff);
          border: 1px solid ${i};
          border-radius: var(--billhive-element-border-radius, 8px);
        }

        .table-header-row {
          border-bottom: 2px solid ${i};
        }

        .table-header-feature {
          padding: 1.5rem;
          text-align: left;
          font-size: var(--billhive-font-size-body-text, 0.875rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          background-color: var(--billhive-highlight-panel-color, #f9fafb);
          border-right: 1px solid ${i};
          vertical-align: top;
          min-width: 200px;
          font-family: var(--billhive-font-family);
        }

        .table-header-plan {
          padding: 1.5rem;
          text-align: center;
          background-color: var(--billhive-cards-color, #fff);
          border-right: 1px solid ${i};
          vertical-align: top;
          min-width: 200px;
          position: relative;
        }

        .table-header-plan:last-child {
          border-right: none;
        }

        .table-header-plan.recommended {
          background-color: var(--billhive-accent-light, rgba(101, 118, 255, 0.03));
          border-left: 2px solid var(--billhive-accent-color, #6576ff);
          border-right: 2px solid var(--billhive-accent-color, #6576ff);
        }

        .table-badge {
          display: inline-block;
          background: var(--billhive-accent-color, #6576ff);
          color: var(--billhive-header-color, #fff);
          padding: 0.25rem 0.75rem;
          border-radius: var(--billhive-element-border-radius, 4px);
          font-size: var(--billhive-font-size-foot-notes, 0.7rem);
          font-weight: var(--billhive-header-font-weight, 600);
          text-transform: uppercase;
          letter-spacing: 0.05em;
          margin-bottom: 0.75rem;
          font-family: var(--billhive-font-family);
        }

        .table-plan-name {
          font-size: var(--billhive-font-size-heading, 1.25rem);
          font-weight: var(--billhive-header-font-weight, 700);
          color: var(--billhive-text-color, #364a63);
          margin: 0.75rem 0;
          font-family: var(--billhive-font-family);
        }

        .table-plan-price {
          display: flex;
          align-items: baseline;
          justify-content: center;
          margin: 1rem 0;
        }

        .table-currency {
          font-size: var(--billhive-font-size-heading, 1.25rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          font-family: var(--billhive-font-family);
        }

        .table-price-value {
          font-size: var(--billhive-font-size-heading, 2.5rem);
          font-weight: var(--billhive-header-font-weight, 800);
          color: var(--billhive-text-color, #364a63);
          line-height: 1;
          font-family: var(--billhive-font-family);
          margin: 0 0.25rem;
        }

        .table-period {
          font-size: var(--billhive-font-size-body-text, 0.875rem);
          color: var(--billhive-sub-text-color, #8094ae);
          font-family: var(--billhive-font-family);
        }

        .table-plan-description {
          font-size: var(--billhive-font-size-sub-text, 0.8rem);
          color: var(--billhive-sub-text-color, #8094ae);
          line-height: 1.5;
          margin: 0.75rem 0 1.25rem 0;
          padding: 0 1rem;
          min-height: 2.5rem;
          font-family: var(--billhive-font-family);
        }

        .table-plan-action {
          margin-top: 1rem;
        }

        .table-btn {
          width: 90%;
          padding: 0.75rem 1.5rem;
          font-size: var(--billhive-font-size-body-text, 0.875rem);
          font-weight: var(--billhive-header-font-weight, 600);
        }

        .table-feature-row {
          border-bottom: 1px solid ${i};
          transition: background-color 0.2s ease;
        }

        .table-feature-row:last-child {
          border-bottom: none;
        }

        .table-feature-row:hover {
          background-color: var(--billhive-highlight-panel-color, #f9fafb);
        }

        .table-feature-name {
          padding: 1rem 1.5rem;
          text-align: left;
          font-size: var(--billhive-font-size-body-text, 0.875rem);
          color: var(--billhive-text-color, #364a63);
          font-weight: 500;
          background-color: var(--billhive-highlight-panel-color, #f9fafb);
          border-right: 1px solid ${i};
          font-family: var(--billhive-font-family);
        }

        .table-feature-value {
          padding: 1rem;
          text-align: center;
          border-right: 1px solid ${i};
        }

        .table-feature-value:last-child {
          border-right: none;
        }

        .table-feature-value.recommended-col {
          background-color: var(--billhive-accent-light, rgba(101, 118, 255, 0.02));
        }

        .table-check-icon,
        .table-cross-icon {
          display: inline-block;
          vertical-align: middle;
          width: 20px;
          height: 20px;
        }

        @media (max-width: 991px) {
          .pricing-container:not(.horizontal-card):not(.table-layout) {
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr)) !important;
          }

          .horizontal-card-content {
            flex-direction: column;
          }

          .horizontal-card-right {
            width: 100%;
          }

          .table-header-feature,
          .table-header-plan {
            min-width: 160px;
            padding: 1.25rem;
          }

          .table-plan-name {
            font-size: var(--billhive-font-size-heading, 1.125rem);
          }

          .table-price-value {
            font-size: var(--billhive-font-size-heading, 2rem);
          }
        }

        @media (max-width: 767px) {
          .pricing-container:not(.horizontal-card):not(.table-layout) {
            grid-template-columns: 1fr !important;
          }

          .pricing-body {
            padding: 1.5rem 1rem;
          }

          .amount {
            font-size: var(--billhive-font-size-heading, 0.8rem);
          }

          .pricing-table-wrapper {
            overflow-x: auto;
          }

          .pricing-table {
            min-width: 600px;
          }

          .table-header-feature,
          .table-header-plan {
            min-width: 140px;
            padding: 1rem;
          }

          .table-plan-name {
            font-size: var(--billhive-font-size-heading, 1rem);
          }

          .table-price-value {
            font-size: var(--billhive-font-size-heading, 1.75rem);
          }

          .table-currency {
            font-size: var(--billhive-font-size-heading, 1rem);
          }

          .table-plan-description {
            font-size: var(--billhive-font-size-sub-text, 0.75rem);
            min-height: auto;
            padding: 0 0.5rem;
          }

          .table-btn {
            padding: 0.625rem 1rem;
            font-size: var(--billhive-font-size-sub-text, 0.8rem);
          }

          .table-feature-name {
            font-size: var(--billhive-font-size-sub-text, 0.8rem);
            padding: 0.875rem 1rem;
          }

          .table-feature-value {
            padding: 0.875rem;
          }

          .table-check-icon,
          .table-cross-icon {
            width: 18px;
            height: 18px;
          }
        }

        /* Loading and Error States */
        .loading-container, .error-container {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: center;
          padding: 3rem 1rem;
          text-align: center;
        }

        .loading-spinner {
          width: 40px;
          height: 40px;
          border: 4px solid var(--billhive-loading-color, #f1f3f7);
          border-top: 4px solid var(--billhive-accent-color, #6576ff);
          border-radius: 50%;
          animation: spin 1s linear infinite;
          margin-bottom: 1rem;
        }

        @keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }

        .error-container {
          color: var(--billhive-error-color, #e85347);
          font-family: var(--billhive-font-family);
        }

        .error-icon {
          font-size: var(--billhive-font-size-heading, 0.8rem);
          margin-bottom: 1rem;
        }

        .error-container h3 {
          color: var(--billhive-text-color, #364a63);
          margin-bottom: 0.5rem;
          font-family: var(--billhive-font-family);
        }

        .retry-btn {
          margin-top: 1rem;
          padding: 0.5rem 1rem;
          background-color: var(--billhive-accent-color, #6576ff);
          color: var(--billhive-header-color, white);
          border: none;
          border-radius: var(--billhive-element-border-radius, 4px);
          cursor: pointer;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-family: var(--billhive-font-family);
          transition: all 0.2s ease;
        }

        .retry-btn:hover {
          background-color: var(--billhive-accent-hover, #5664e3);
          box-shadow: var(--billhive-button-shadow, 0 2px 4px rgba(101, 118, 255, 0.3));
        }
      </style>
    `}}return customElements.get("bh-pricing-cards-layout")===void 0&&customElements.define("bh-pricing-cards-layout",c),c}();

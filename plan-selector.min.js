(function(){"use strict";const u={baseUrl:"http://localhost:4001",apiKey:"7e4272f5dc4a2b44442910b1196bf402b09617f9d7a4c1db936583a9008a9fd7",productId:"cf190aae-cf47-44b0-9e11-6aa6f26bc403",endpoints:{pricingTable:h=>`/products/${h}/pricing-table`,products:"/products",subscriptions:"/subscriptions"},headers:{"Content-Type":"application/json",Accept:"application/json"},getAuthHeaders(){return{...this.headers,"api-key":this.apiKey}},getPricingTableUrl(h=null){const e=h||this.productId;return`${this.baseUrl}${this.endpoints.pricingTable(e)}`}};typeof module<"u"&&module.exports&&(module.exports=u),typeof window<"u"&&(window.ApiConfig=u);const b={layout:"standalone",theme:{colors:{accent:"#5b5bd6",header:"#f2ededff",highlightPanel:"#f7f7fe",card:"#ffffff",inputComponent:"#f9fafb",text:"#111827",subText:"#6b7280",borders:"#e2e8f0",error:"#dc2626",success:"#10b981",warning:"#f59e0b",loading:"#f9fafb",disabled:"#f3f4f6"},typography:{fontFamily:"'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif",fontSizeHeading:"1.275rem",fontSizeSubHeading:"1.25rem",fontSizeBodyText:"0.9375rem",fontSizeSubText:"0.875rem",fontSizeFootNotes:"0.8125rem",headerFontWeight:"700",elementBorderRadius:"4px",modalBorderRadius:"8px"},shadows:{card:"0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06)",modal:"0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)"}}};function x(h=b){let e="";return h.theme&&typeof h.theme=="object"&&(h.theme.colors&&Object.entries(h.theme.colors).forEach(([t,i])=>{let o;switch(t){case"accent":o="--billhive-accent-color";break;case"header":o="--billhive-header-color";break;case"highlightPanel":o="--billhive-highlight-panel-color";break;case"card":o="--billhive-cards-color";break;case"inputComponent":o="--billhive-input-components-color";break;case"text":o="--billhive-text-color";break;case"subText":o="--billhive-sub-text-color";break;case"borders":o="--billhive-border-color";break;case"accentHover":o="--billhive-accent-hover";break;case"accentLight":o="--billhive-accent-light";break;default:o=`--billhive-${t.replace(/([A-Z])/g,"-$1").toLowerCase()}-color`}e+=`${o}: ${i};
    `}),h.theme.typography&&Object.entries(h.theme.typography).forEach(([t,i])=>{const o=`--billhive-${t.replace(/([A-Z])/g,"-$1").toLowerCase()}`;e+=`${o}: ${i};
    `}),h.theme.shadows&&Object.entries(h.theme.shadows).forEach(([t,i])=>{let o;switch(t){case"card":o="--billhive-card-shadow";break;case"modal":o="--billhive-modal-shadow";break;case"button":o="--billhive-button-shadow";break;default:o=`--billhive-${t}-shadow`}e+=`${o}: ${i};
    `}),h.layout&&(e+=`--billhive-layout: ${h.layout};
    `)),`
    :host {
      ${e.trim()}
    }
  `}function w(h){var o,r,n;if(console.log("Merging themes. Custom theme:",h),!h||Object.keys(h).length===0)return JSON.parse(JSON.stringify(b));if(!h.theme)return console.warn('mergeThemes: customTheme must have a "theme" property. Returning default theme.'),JSON.parse(JSON.stringify(b));const e=JSON.parse(JSON.stringify(b)),t=JSON.parse(JSON.stringify(h)),i={layout:t.layout||e.layout,theme:{colors:{...e.theme.colors,...((o=t.theme)==null?void 0:o.colors)||{}},typography:{...e.theme.typography,...((r=t.theme)==null?void 0:r.typography)||{}},shadows:{...e.theme.shadows,...((n=t.theme)==null?void 0:n.shadows)||{}}}};return t.card&&(i.card=t.card),console.log("Merged theme:",i),i}function g(h){let e=h.replace("#","");e.length===8&&(e=e.substr(0,6));const t=parseInt(e.substr(0,2),16),i=parseInt(e.substr(2,2),16),o=parseInt(e.substr(4,2),16),r=Math.floor(t*.8),n=Math.floor(i*.8),l=Math.floor(o*.8);return{theme:{colors:{accentHover:`#${r.toString(16).padStart(2,"0")}${n.toString(16).padStart(2,"0")}${l.toString(16).padStart(2,"0")}`,accentLight:`rgba(${t}, ${i}, ${o}, 0.1)`},shadows:{button:`0 2px 4px rgba(${t}, ${i}, ${o}, 0.3)`}}}}function C(h){const e=[];if(!h.theme)return e.push('Theme must have a "theme" property containing colors, typography, and shadows'),{isValid:!1,errors:e};const t=h.theme;return t.colors?(["accent","text"].forEach(o=>{t.colors[o]||e.push(`Missing required color property: theme.colors.${o}`)}),Object.entries(t.colors).forEach(([o,r])=>{r&&typeof r=="string"&&!r.match(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{8}|[A-Fa-f0-9]{3})|rgba?\(.*\)$/)&&e.push(`Invalid color format for theme.colors.${o}: ${r}`)})):e.push("Missing theme.colors section"),t.typography&&["fontFamily"].forEach(o=>{t.typography[o]||e.push(`Missing required typography property: theme.typography.${o}`)}),h.layout&&!["in-app","full-page"].includes(h.layout)&&e.push(`Invalid layout value: ${h.layout}. Must be 'in-app', or 'full-page'`),{isValid:e.length===0,errors:e}}class P extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.selectedPlan=null,this.planId=null,this.isLoadingPlan=!1,this.planLoadError=null,this.addons=[],this.selectedAddons=new Set,this.addonQuantities=new Map,this.isLoadingAddons=!1,this.addonsLoadError=null,this.isVisible=!1,this.couponCode="",this.appliedCoupon=null,this.availableDiscounts=[],this.selectedDiscount=null,this.isLoadingOffers=!1,this.offersLoadError=null,this.updateTimeout=null,this.orderEstimate=null,this.isLoadingEstimate=!1,this.estimateError=null,this.estimateRequestId=0,this.currentModalStep="plan-selection",this.existingAccount=null,this.isCheckingExistingAccount=!1,this.createdOrder=null,this.isCreatingOrder=!1,this.orderCreated=!1,this.orderInvoices=[],this.isLoadingInvoices=!1,this.personalDetails={firstName:"",lastName:"",email:"",phone:"",company:"",address:{addressLine:"",city:"",state:"",zipCode:"",country:""}},this.formErrors={},this.selectedPaymentMethod="",this.orderData=null,this.paymentDetails={card:{cardNumber:"",expiryDate:"",cvv:"",cardholderName:""},upi:{upiId:""},netbanking:{bankName:""},wallet:{walletType:"",walletNumber:""}},this.theme=b,this.cashfreeInstance=null,this.cashfreeComponents={cardNumber:null,cardHolder:null,cardExpiry:null,cardCvv:null,upiCollect:null,wallets:new Map}}get themeData(){return this.theme}set themeData(e){e&&typeof e=="object"&&this.applyThemeData(e)}applyThemeData(e){var t,i;try{const o=C(e);if(o.isValid){this.theme={...b},this.theme=w(e);const r=((i=(t=e.theme)==null?void 0:t.colors)==null?void 0:i.accent)||e.accentColor;if(r){const n=g(r);this.theme={...this.theme,theme:{...this.theme.theme,colors:{...this.theme.theme.colors,...n.theme.colors},shadows:{...this.theme.theme.shadows,...n.theme.shadows}}}}console.log("Checkout programmatic theme applied:",this.theme),this.render()}else console.warn("Invalid themeData configuration:",o.errors)}catch(o){console.warn("Error applying themeData:",o)}}static get observedAttributes(){return["data-plan","data-plan-id","visible","data-theme","theme-data"]}connectedCallback(){this.loadData(),this.loadCashfreeSDK(),this.render(),this.setupEventListeners()}async loadCashfreeSDK(){try{if(window.Cashfree){console.log("Cashfree SDK already loaded globally"),this.cashfreeInstance=window.Cashfree;return}const e=document.createElement("script");e.src="https://sdk.cashfree.com/js/v3/cashfree.js",e.async=!0,await new Promise((t,i)=>{e.onload=()=>{console.log("Cashfree SDK script loaded"),window.Cashfree?(this.cashfreeInstance=new window.Cashfree({mode:"sandbox"}),console.log("✅ Cashfree SDK initialized successfully"),t()):i(new Error("Cashfree object not found after script load"))},e.onerror=i,document.head.appendChild(e)})}catch(e){console.error("❌ Failed to load Cashfree SDK:",e)}}attributeChangedCallback(e,t,i){t!==i&&(e==="data-plan"?this.loadPlan():e==="data-plan-id"?this.planId=i:e==="visible"?this.isVisible=i==="true":e==="data-theme"&&this.loadTheme(),this.render())}loadData(){this.planId=this.getAttribute("data-plan-id"),this.planId||(this.loadPlan(),this.addons=[]),this.isVisible=this.getAttribute("visible")==="true",this.loadTheme()}loadTheme(){var i,o,r,n;this.theme={...b};const e=((o=(i=this.theme.theme)==null?void 0:i.colors)==null?void 0:o.accent)||this.theme.accentColor;if(e){const l=g(e);this.theme={...this.theme,theme:{...this.theme.theme,colors:{...this.theme.theme.colors,...l.theme.colors},shadows:{...this.theme.theme.shadows,...l.theme.shadows}}}}console.log("Checkout theme loaded:",this.theme);const t=this.getAttribute("data-theme");if(console.log("themeAtr :",t),t)try{const l=JSON.parse(t),s=C(l);if(s.isValid){this.theme=w(l);const a=((n=(r=l.theme)==null?void 0:r.colors)==null?void 0:n.accent)||l.accentColor;if(a){const d=g(a);this.theme={...this.theme,theme:{...this.theme.theme,colors:{...this.theme.theme.colors,...d.theme.colors},shadows:{...this.theme.theme.shadows,...d.theme.shadows}}}}console.log("Checkout custom theme applied:",this.theme)}else console.warn("Invalid theme configuration:",s.errors)}catch(l){console.warn("Invalid JSON in data-theme attribute:",l)}}loadPlan(){const e=this.getAttribute("data-plan");if(e)try{this.selectedPlan=JSON.parse(e)}catch{this.selectedPlan=null}else this.selectedPlan={id:"professional",name:"Professional",description:"Perfect for growing businesses",price:49,period:"month",features:["Unlimited invoices","Up to 10 team members","Advanced analytics","Priority support","API access"]}}async loadPlanFromApi(){var e,t;if(this.planId){this.isLoadingPlan=!0,this.planLoadError=null;try{const i=((e=window.ApiConfig)==null?void 0:e.baseUrl)||u.baseUrl,o=((t=window.ApiConfig)==null?void 0:t.apiKey)||u.apiKey,r=`${i}/rate-plan-prices/${this.planId}`,n=await fetch(r,{method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-api-key":o}});if(!n.ok)throw new Error(`HTTP error! status: ${n.status}`);const l=await n.json();this.selectedPlan=this.transformPlanApiData(l),this.isLoadingPlan=!1,this.planLoadError=null,this.render(),this.loadAddonsFromApi().catch(s=>{console.error("Failed to load addons:",s)}),this.loadApplicableOffers().catch(s=>{console.error("Failed to load applicable offers:",s)}),this.updateOrderSummary()}catch(i){this.planLoadError=i.message,this.isLoadingPlan=!1,this.isLoadingAddons=!1,this.loadPlan(),this.addons=[],this.render()}}}transformPlanApiData(e){var i,o,r;return{id:e.ratePlanId,ratePlanPriceId:e.ratePlanPriceId,name:e.name||e.externalName,description:e.description,price:e.price,currencyCode:e.currencyCode,period:((i=e.billingPeriod)==null?void 0:i.periodName)||((o=e.billingPeriod)==null?void 0:o.period),periodName:(r=e.billingPeriod)==null?void 0:r.periodName,billingPeriod:e.billingPeriod,features:e.addons||e.features||[],recommended:e.mostPopular||!1,planLevel:e.planLevel,isTrial:e.isTrial,trialPeriod:e.trialPeriod,ratePlanKey:e.ratePlanKey,productName:e.productName,productId:e.productId,status:e.status,isVisibleInPortal:e.isVisibleInPortal,isVisibleInCheckout:e.isVisibleInCheckout,requireBillingAtSignup:e.requireBillingAtSignup,autoRenew:e.autoRenew,termLength:e.termLength,taxIncluded:e.taxIncluded,pricingModel:e.pricingModel,billingCycle:e.billingCycle}}async loadAddonsFromApi(){var e,t,i;if(!((e=this.selectedPlan)!=null&&e.ratePlanPriceId)){this.addons=[];return}this.isLoadingAddons=!0,this.addonsLoadError=null;try{const o=((t=window.ApiConfig)==null?void 0:t.baseUrl)||u.baseUrl,r=((i=window.ApiConfig)==null?void 0:i.apiKey)||u.apiKey,n=encodeURIComponent('{"where":{"applicability":{"neq":"Mandatory"}}}'),l=`${o}/rate-plan-prices/${this.selectedPlan.ratePlanPriceId}/addons?filter=${n}`,s=await fetch(l,{method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-api-key":r}});if(!s.ok)throw new Error(`Failed to fetch addons: HTTP ${s.status}`);const a=await s.json();this.addons=this.transformAddonsApiData(a),this.isLoadingAddons=!1,this.addonsLoadError=null,this.render()}catch(o){console.error("Error loading addons:",o),this.addonsLoadError=o.message,this.isLoadingAddons=!1,this.addons=[],this.render()}}transformAddonsApiData(e){return Array.isArray(e)?e.map(t=>{var i,o;return{id:t.addonPriceId,addonId:t.addonId,addonPriceId:t.addonPriceId,name:t.externalName||t.name,description:t.description,price:t.price,quantity:t.quantity||1,unitOfMeasurement:t.unitOfMeasurement,period:(o=(i=t.billingPeriod)==null?void 0:i.periodName)==null?void 0:o.toLowerCase(),billingPeriod:t.billingPeriod,currencyCode:t.currencyCode,pricingModel:t.pricingModel,applicability:t.applicability,isPriceIncluded:t.isPriceIncluded,isVisibleInPortal:t.isVisibleInPortal,status:t.status,addonPriceKey:t.addonPriceKey}}):[]}async loadApplicableOffers(){var e,t,i;if(!((e=this.selectedPlan)!=null&&e.ratePlanPriceId)){console.warn("No ratePlanPriceId available to load offers"),this.availableDiscounts=[];return}this.isLoadingOffers=!0,this.offersLoadError=null,this.render();try{const o=((t=window.ApiConfig)==null?void 0:t.baseUrl)||u.baseUrl,r=((i=window.ApiConfig)==null?void 0:i.apiKey)||u.apiKey,n=`${o}/applicable-offers`,l=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","x-api-key":r},body:JSON.stringify({ratePlanPriceId:this.selectedPlan.ratePlanPriceId})});if(!l.ok)throw new Error(`Failed to fetch applicable offers: HTTP ${l.status}`);const s=await l.json();this.availableDiscounts=s.map(a=>{var d;return{id:a.id,name:a.externalName||a.name,description:a.description,type:a.discountType==="Percentage"?"percentage":"fixed",value:a.amount,code:((d=a.code)==null?void 0:d.trim())||`OFFER${a.id.slice(-8).toUpperCase()}`,apiData:{tenantId:a.tenantId,applyOn:a.applyOn,discountDurationType:a.discountDurationType,expiryDate:a.expiryDate,maxRedemptionCount:a.maxRedemptionCount,maxRedemptionCountPerCustomer:a.maxRedemptionCountPerCustomer,minimumPurchaseAmount:a.minimumPurchaseAmount,status:a.status}}}).filter(a=>a.apiData.status==="Active"),this.isLoadingOffers=!1,this.offersLoadError=null}catch(o){console.error("Error loading applicable offers:",o),this.isLoadingOffers=!1,this.offersLoadError=o.message,this.availableDiscounts=[]}this.render()}async loadOrderEstimate(){var t,i;this.estimateRequestId+=1;const e=this.estimateRequestId;this.isLoadingEstimate=!0,this.estimateError=null,this.orderEstimate=null,this.render();try{const o=((t=window.ApiConfig)==null?void 0:t.baseUrl)||u.baseUrl,r=((i=window.ApiConfig)==null?void 0:i.apiKey)||u.apiKey,n=`${o}/orders/estimate`,l=this.buildEstimateRequestBody(),s=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","x-api-key":r},body:JSON.stringify(l)});if(e!==this.estimateRequestId)return;if(!s.ok)throw new Error(`Failed to fetch order estimate: HTTP ${s.status}`);const a=await s.json();console.log("Order estimate received:",a),e===this.estimateRequestId&&(this.orderEstimate=a,this.isLoadingEstimate=!1,this.estimateError=null)}catch(o){e===this.estimateRequestId&&(console.error("Error loading order estimate:",o),this.isLoadingEstimate=!1,this.estimateError=o.message,this.orderEstimate=null)}e===this.estimateRequestId&&this.render()}buildEstimateRequestBody(){var o;const e=[],t=new Date().toISOString().split("T")[0];return this.selectedPlan&&(e.push({itemType:"Rate Plan",itemId:this.selectedPlan.ratePlanPriceId,quantity:1,options:{startDate:t,billingCycle:1,autoRenew:!1,autoCollect:!1,invoiceGenerationPreference:"Immediately"}}),this.selectedAddons.forEach(r=>{const n=this.addons.find(l=>l.id===r);n&&e.push({itemType:"Addon",itemId:n.addonPriceId,quantity:this.addonQuantities.get(r)||1,options:{ratePlanPriceId:this.selectedPlan.ratePlanPriceId}})})),this.selectedDiscount&&e.push({itemType:"Discount",itemId:this.selectedDiscount.id,quantity:1}),console.log("Applied coupon is:",this.appliedCoupon),this.appliedCoupon&&e.push({itemType:"Coupon",itemId:this.appliedCoupon.code,quantity:1,options:{startDate:t}}),{srcSysCode:"Website",eventType:"NEW SUBSCRIPTION",currency:(o=this.selectedPlan)==null?void 0:o.currencyCode,scheduleDate:t,cart:e,personalInfo:{}}}buildPlaceOrderRequestBody(e){const t=this.buildEstimateRequestBody();return t.personalInfo={accountId:e},t}async placeOrder(e){var t,i;if(this.orderCreated)return console.log("Order already created, skipping duplicate creation"),this.createdOrder;if(this.isCreatingOrder){console.log("Order creation in progress, skipping duplicate request");return}try{this.isCreatingOrder=!0;const o=((t=window.ApiConfig)==null?void 0:t.baseUrl)||u.baseUrl,r=((i=window.ApiConfig)==null?void 0:i.apiKey)||u.apiKey,n=`${o}/orders/place`,l=this.buildPlaceOrderRequestBody(e);console.log("Placing order with request body:",l);const s=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","x-api-key":r},body:JSON.stringify(l)});if(!s.ok)throw new Error(`Failed to place order: HTTP ${s.status}`);const a=await s.json();return console.log("Order placed successfully:",a),this.createdOrder=a,this.orderCreated=!0,this.isCreatingOrder=!1,a}catch(o){throw console.error("Error placing order:",o),this.isCreatingOrder=!1,o}}async getOrderInvoices(e){var t,i;if(!e){console.error("Order ID is required to fetch invoices");return}if(this.isLoadingInvoices){console.log("Invoices loading in progress, skipping duplicate request");return}try{this.isLoadingInvoices=!0;const o=((t=window.ApiConfig)==null?void 0:t.baseUrl)||u.baseUrl,r=((i=window.ApiConfig)==null?void 0:i.apiKey)||u.apiKey,n=encodeURIComponent(JSON.stringify({where:{status:"Posted",orderId:e}})),l=`${o}/invoices?filter=${n}`;console.log("Fetching invoices for order:",e);const s=await fetch(l,{method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-api-key":r}});if(!s.ok)throw new Error(`Failed to fetch invoices: HTTP ${s.status}`);const a=await s.json();return console.log("Invoices fetched successfully:",a),this.orderInvoices=a,this.isLoadingInvoices=!1,a}catch(o){throw console.error("Error fetching invoices:",o),this.isLoadingInvoices=!1,this.orderInvoices=[],o}}async updateAccount(e){var t,i,o,r;try{const n=((t=window.ApiConfig)==null?void 0:t.baseUrl)||u.baseUrl,l=((i=window.ApiConfig)==null?void 0:i.apiKey)||u.apiKey,s=`${n}/accounts/${e}`,a={accountType:this.personalDetails.company&&this.personalDetails.company.trim()?"Organisation":"Individual",name:this.personalDetails.company&&this.personalDetails.company.trim()?this.personalDetails.company.trim():`${this.personalDetails.firstName} ${this.personalDetails.lastName}`.trim(),country:this.personalDetails.address.country,address:this.personalDetails.address.addressLine,state:this.personalDetails.address.state,city:this.personalDetails.address.city,zipCode:this.personalDetails.address.zipCode,phone:this.personalDetails.phone,email:this.personalDetails.email,sameAsSoldTo:!1},d=await fetch(s,{method:"PATCH",headers:{"Content-Type":"application/json",Accept:"application/json","x-api-key":l},body:JSON.stringify(a)});if(!d.ok)throw new Error(`Failed to update account: HTTP ${d.status}`);let p;return d.status===204?(console.log("Customer account updated successfully (204 No Content)"),p={...this.existingAccount,accountId:e,name:a.name,country:a.country,address:a.address,state:a.state,city:a.city,zipCode:a.zipCode,phone:a.phone,email:a.email,accountType:a.accountType,communicationProfile:this.existingAccount.communicationProfile}):(p=await d.json(),console.log("Customer account updated:",p)),a.accountType==="Organisation"&&((r=(o=this.existingAccount)==null?void 0:o.communicationProfile)!=null&&r.contactId)&&await this.updateContact(e,this.existingAccount.communicationProfile.contactId),p}catch(n){throw console.error("Error updating account:",n),n}}async updateContact(e,t){var i,o,r,n,l,s;try{const a=((i=window.ApiConfig)==null?void 0:i.baseUrl)||u.baseUrl,d=((o=window.ApiConfig)==null?void 0:o.apiKey)||u.apiKey,p=`${a}/accounts/${e}/contacts/${t}`,c={fullName:`${this.personalDetails.firstName} ${this.personalDetails.lastName}`.trim(),country:this.personalDetails.address.country,email:this.personalDetails.email,address:this.personalDetails.address.addressLine,billNotification:(n=(r=this.existingAccount)==null?void 0:r.communicationProfile)==null?void 0:n.billNotification,accountNotification:(s=(l=this.existingAccount)==null?void 0:l.communicationProfile)==null?void 0:s.accountNotification,phone:this.personalDetails.phone};console.log("Updating contact:",t,c);const m=await fetch(p,{method:"PATCH",headers:{"Content-Type":"application/json",Accept:"application/json","x-api-key":d},body:JSON.stringify(c)});if(!m.ok)throw new Error(`Failed to update contact: HTTP ${m.status}`);if(m.status===204)return console.log("Contact updated successfully (204 No Content)"),{success:!0};const f=await m.json();return console.log("Contact updated:",f),f}catch(a){throw console.error("Error updating contact:",a),a}}async createCustomerAccount(){var e,t;try{if(this.existingAccount&&this.existingAccount.accountId){console.log("Updating existing Draft account:",this.existingAccount);const a=await this.updateAccount(this.existingAccount.accountId);return this.createdAccountId=a.id||a.accountId,a}const i=((e=window.ApiConfig)==null?void 0:e.baseUrl)||u.baseUrl,o=((t=window.ApiConfig)==null?void 0:t.apiKey)||u.apiKey,r=`${i}/accounts`,n={accountType:this.personalDetails.company&&this.personalDetails.company.trim()?"Organisation":"Individual",name:this.personalDetails.company&&this.personalDetails.company.trim()?this.personalDetails.company.trim():`${this.personalDetails.firstName} ${this.personalDetails.lastName}`.trim(),country:this.personalDetails.address.country,address:this.personalDetails.address.addressLine,state:this.personalDetails.address.state,city:this.personalDetails.address.city,zipCode:this.personalDetails.address.zipCode,phone:this.personalDetails.phone,email:this.personalDetails.email,sameAsSoldTo:!1,communicationProfile:{fullName:`${this.personalDetails.firstName} ${this.personalDetails.lastName}`.trim(),address:this.personalDetails.address.addressLine,country:this.personalDetails.address.country,phone:this.personalDetails.phone,email:this.personalDetails.email}},l=await fetch(r,{method:"POST",headers:{"Content-Type":"application/json",Accept:"application/json","x-api-key":o},body:JSON.stringify(n)});if(!l.ok)throw new Error(`Failed to create customer account: HTTP ${l.status}`);const s=await l.json();return console.log("Customer account created:",s),this.createdAccountId=s.accountId,s}catch(i){throw console.error("Error creating customer account:",i),i}}async checkExistingAccount(e){var t,i;try{const o=((t=window.ApiConfig)==null?void 0:t.baseUrl)||u.baseUrl,r=((i=window.ApiConfig)==null?void 0:i.apiKey)||u.apiKey,n=`${o}/accounts?filter=${encodeURIComponent(JSON.stringify({where:{email:e}}))}`,l=await fetch(n,{method:"GET",headers:{"Content-Type":"application/json",Accept:"application/json","x-api-key":r}});if(!l.ok)throw new Error(`Failed to check existing account: HTTP ${l.status}`);const s=await l.json();return console.log("Existing account check result:",s),s.accounts&&s.accounts.length>0?s.accounts[0]:null}catch(o){return console.error("Error checking existing account:",o),null}}async handleEmailCheck(e){if(console.log("Checking email:",e),this.isCheckingExistingAccount){console.log("Already checking, skipping...");return}this.isCheckingExistingAccount=!0,this.existingAccount=null,this.hideExistingAccountMessage(),delete this.formErrors.email,this.updateFieldError("email");try{const t=await this.checkExistingAccount(e);console.log("Found existing account:",t),t&&t.accountId?t.status==="Active"?(console.log("Account is Active, showing error"),this.formErrors.email="Email ID is already associated with another account, please use another email ID",this.updateFieldError("email"),this.updateNextButtonState()):t.status==="Draft"&&(console.log("Account is Draft, prefilling details"),t&&(this.existingAccount=t,this.showExistingAccountMessage(t),await this.prefillAccountDetails(t))):(console.log("No existing account found"),this.hideExistingAccountMessage())}catch(t){console.error("Error during email check:",t)}finally{this.isCheckingExistingAccount=!1}}async prefillAccountDetails(e){console.log("Prefilling account details:",e),console.log("Current personal details before prefill:",this.personalDetails);const t=this.personalDetails.email;if(this.personalDetails={firstName:"",lastName:"",email:t,phone:"",company:"",address:{addressLine:"",city:"",state:"",zipCode:"",country:""}},e.accountType==="Organisation"){if(console.log("Organisation account detected"),this.personalDetails.company=e.name,console.log("Prefilled company:",this.personalDetails.company),e.communicationProfile&&e.communicationProfile.fullName){const i=e.communicationProfile.fullName.split(" ").filter(o=>o.trim());i.length>=1&&(this.personalDetails.firstName=i[0],console.log("Prefilled firstName from communicationProfile:",this.personalDetails.firstName)),i.length>=2&&(this.personalDetails.lastName=i.slice(1).join(" "),console.log("Prefilled lastName from communicationProfile:",this.personalDetails.lastName))}}else if(console.log("Individual account detected"),e.name){const i=e.name.split(" ").filter(o=>o.trim());i.length>=1&&(this.personalDetails.firstName=i[0],console.log("Prefilled firstName:",this.personalDetails.firstName)),i.length>=2&&(this.personalDetails.lastName=i.slice(1).join(" "),console.log("Prefilled lastName:",this.personalDetails.lastName))}e.phone&&(this.personalDetails.phone=e.phone,console.log("Prefilled phone:",this.personalDetails.phone)),e.address&&(this.personalDetails.address.addressLine=e.address,console.log("Prefilled addressLine:",this.personalDetails.address.addressLine)),e.city&&(this.personalDetails.address.city=e.city,console.log("Prefilled city:",this.personalDetails.address.city)),e.state&&(this.personalDetails.address.state=e.state,console.log("Prefilled state:",this.personalDetails.address.state)),e.zipCode&&(this.personalDetails.address.zipCode=e.zipCode,console.log("Prefilled zipCode:",this.personalDetails.address.zipCode)),e.country&&(this.personalDetails.address.country=e.country,console.log("Prefilled country:",this.personalDetails.address.country)),console.log("Personal details after prefill:",this.personalDetails),this.render(),this.updateNextButtonState()}showExistingAccountMessage(e){const t=this.shadowRoot.querySelector('[data-field="email"]');if(t){let i=this.shadowRoot.querySelector(".existing-account-message");i||(i=document.createElement("div"),i.className="existing-account-message",t.parentNode.appendChild(i)),i.innerHTML=`
        <div style="margin-top: 8px; padding: 10px; background-color: #e3f2fd; border-left: 4px solid #2196f3; border-radius: 4px; font-size: 14px; color: #1976d2;">
          ✓ We found an existing account for this email: <strong>${e.name||e.email}</strong>
          <br><small>We've prefilled your information from your existing account.</small>
        </div>
      `}}hideExistingAccountMessage(){const e=this.shadowRoot.querySelector(".existing-account-message");e&&e.remove()}setupEventListeners(){this.handleEscapeKey=e=>{e.key==="Escape"&&this.isVisible&&this.close()},document.addEventListener("keydown",this.handleEscapeKey)}open(e){e!==void 0&&(this.selectedPlan=e),this.selectedAddons.clear(),this.couponCode="",this.appliedCoupon=null,this.selectedDiscount=null,this.availableDiscounts=[],this.currentModalStep="plan-selection",this.formErrors={},this.isVisible=!0,this.render(),document.body.style.overflow="hidden",setTimeout(()=>{const t=this.shadowRoot.querySelector(".modal-overlay");t&&this.isVisible&&(t.classList.add("fade-in"),setTimeout(()=>{t&&this.isVisible&&t.classList.add("show")},10))},10)}close(){if(!this.isVisible)return;this.updateTimeout&&(clearTimeout(this.updateTimeout),this.updateTimeout=null),this.selectedAddons.clear(),this.addonQuantities.clear();const e=this.shadowRoot.querySelector(".modal-overlay");if(e)e.classList.remove("show"),setTimeout(()=>{if(e){e.classList.remove("fade-in","visible"),this.isVisible=!1,document.body.style.overflow="";const t=new CustomEvent("modal-closed",{bubbles:!0});this.dispatchEvent(t)}},300);else{this.isVisible=!1,document.body.style.overflow="";const t=new CustomEvent("modal-closed",{bubbles:!0});this.dispatchEvent(t)}}disconnectedCallback(){this.updateTimeout&&(clearTimeout(this.updateTimeout),this.updateTimeout=null),this.handleEscapeKey&&(document.removeEventListener("keydown",this.handleEscapeKey),this.handleEscapeKey=null),document.body.style.overflow=""}toggleAddon(e){this.selectedAddons.has(e)?(this.selectedAddons.delete(e),this.addonQuantities.delete(e)):(this.selectedAddons.add(e),this.addonQuantities.set(e,1)),this.updateOrderSummary()}handleAddonQuantityChange(e,t){const i=parseInt(t,10),o=this.shadowRoot.querySelector(`#addon-qty-${e}`);isNaN(i)||i<1?(this.addonQuantities.set(e,1),o&&(o.value=1,o.style.borderColor="#ff6b6b",setTimeout(()=>{o.style.borderColor=""},1500))):i>999?(this.addonQuantities.set(e,999),o&&(o.value=999,o.style.borderColor="#ff6b6b",setTimeout(()=>{o.style.borderColor=""},1500))):(this.addonQuantities.set(e,i),o&&(o.style.borderColor="")),this.updateOrderSummary()}updateOrderSummary(){this.updateTimeout&&clearTimeout(this.updateTimeout),this.updateTimeout=setTimeout(()=>{this.loadOrderEstimate()},300)}calculateTotal(){let e=this.selectedPlan?this.selectedPlan.price:0;return this.selectedAddons.forEach(t=>{const i=this.addons.find(o=>o.id===t);i&&(e+=i.price)}),e}calculateDiscountedTotal(){let e=this.calculateTotal(),t=0;return this.appliedCoupon&&(this.appliedCoupon.type==="percentage"?t+=e*this.appliedCoupon.value/100:this.appliedCoupon.type==="fixed"&&(t+=this.appliedCoupon.value)),this.selectedDiscount&&(this.selectedDiscount.type==="percentage"?t+=e*this.selectedDiscount.value/100:this.selectedDiscount.type==="fixed"&&(t+=this.selectedDiscount.value)),Math.max(0,e-t)}getTotalDiscount(){const e=this.calculateTotal(),t=this.calculateDiscountedTotal();return e-t}applyCouponCode(){const e=this.couponCode.trim();e&&(this.appliedCoupon={code:e,name:`Coupon: ${e}`},this.showMessage("Coupon applied successfully!","success"),this.updateOrderSummary())}removeCoupon(){this.appliedCoupon=null,this.couponCode="",this.updateOrderSummary()}selectDiscount(e){var t;((t=this.selectedDiscount)==null?void 0:t.id)===e?this.selectedDiscount=null:this.selectedDiscount=this.availableDiscounts.find(i=>i.id===e),this.updateOrderSummary()}removeDiscount(e){var t;((t=this.selectedDiscount)==null?void 0:t.id)===e&&(this.selectedDiscount=null,this.updateOrderSummary())}showMessage(e,t="info"){const i=this.shadowRoot.querySelector(".coupon-message");i&&(i.textContent=e,i.className=`coupon-message ${t}`,i.style.display="block",setTimeout(()=>{i.style.display="none"},3e3))}proceedToPersonalDetails(){this.currentModalStep="personal-details",this.render()}goBackToPlanSelection(){this.currentModalStep="plan-selection",this.render()}proceedToPaymentMethod(){this.currentModalStep="payment-method",this.render()}goBackToPersonalDetails(){this.currentModalStep="personal-details",this.render()}selectPaymentMethod(e){this.selectedPaymentMethod=e,this.render()}validatePersonalDetails(){const e={},{personalDetails:t}=this;return t.firstName.trim()||(e.firstName="First name is required"),t.lastName.trim()||(e.lastName="Last name is required"),t.email.trim()?/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t.email)||(e.email="Please enter a valid email address"):e.email="Email is required",t.phone.trim()||(e.phone="Phone number is required"),t.address.addressLine.trim()||(e.addressLine="Address line is required"),t.address.city.trim()||(e.city="City is required"),t.address.state.trim()||(e.state="State/Province is required"),t.address.zipCode.trim()||(e.zipCode="ZIP/Postal code is required"),t.address.country.trim()||(e.country="Country is required"),e}isPersonalDetailsFormValid(){if(Object.keys(this.formErrors).length>0)return!1;const{personalDetails:e}=this,t=e.firstName.trim()&&e.lastName.trim()&&e.email.trim()&&e.phone.trim()&&e.address.addressLine.trim()&&e.address.city.trim()&&e.address.state.trim()&&e.address.zipCode.trim()&&e.address.country.trim(),i=e.email.trim()&&/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e.email);return t&&i}validatePaymentDetails(){const e={};if(!this.selectedPaymentMethod)return e.paymentMethod="Please select a payment method",e;switch(this.selectedPaymentMethod){case"card":this.cashfreeComponents.cardNumber&&this.cashfreeComponents.cardHolder&&this.cashfreeComponents.cardExpiry&&this.cashfreeComponents.cardCvv?(this.cashfreeComponents.cardHolder.isComplete()||(e.cardholderName="Cardholder name is required"),this.cashfreeComponents.cardNumber.isComplete()||(e.cardNumber="Please enter a valid card number"),this.cashfreeComponents.cardExpiry.isComplete()||(e.expiryDate="Please enter a valid expiry date"),this.cashfreeComponents.cardCvv.isComplete()||(e.cvv="Please enter a valid CVV")):e.cardForm="Payment form is not properly initialized. Please refresh and try again.";break;case"upi":this.cashfreeComponents.upiCollect?this.cashfreeComponents.upiCollect.isComplete()||(e.upiId="Please enter a valid UPI ID"):e.upiForm="UPI form is not properly initialized. Please refresh and try again.";break;case"netbanking":this.paymentDetails.netbanking.bankName.trim()||(e.bankName="Please select a bank");break;case"wallet":this.cashfreeComponents.wallets&&this.cashfreeComponents.wallets.size>0?(!this.paymentDetails.wallet.selectedProvider||!this.paymentDetails.wallet.isValid)&&(e.walletType="Please select a wallet to proceed"):e.walletForm="Wallet options are not properly initialized. Please refresh and try again.";break}return e}handleInputChange(e,t){if(e.startsWith("address.")){const i=e.replace("address.","");this.personalDetails.address[i]=t}else if(e.startsWith("payment.")){const[,i,o]=e.split(".");this.paymentDetails[i]&&(this.paymentDetails[i][o]=t)}else this.personalDetails[e]=t;delete this.formErrors[e],this.updateFieldError(e),this.updateNextButtonState()}updateNextButtonState(){if(this.currentModalStep==="personal-details"){const e=this.shadowRoot.querySelector("#proceedBtn");e&&(this.isPersonalDetailsFormValid()?e.removeAttribute("disabled"):e.setAttribute("disabled",""))}}updateFieldError(e){let t=e;if(e.startsWith("address.")&&(t=e.replace("address.","")),e.startsWith("payment.")){const r=e.split(".");r.length===3&&(t=r[2])}const i=this.shadowRoot.querySelector(`[data-error="${t}"]`);i&&(this.formErrors[e]?(i.textContent=this.formErrors[e],i.style.display="block"):(i.textContent="",i.style.display="none"));const o=this.shadowRoot.querySelector(`[data-field="${e}"]`);o&&(this.formErrors[e]?o.classList.add("error"):o.classList.remove("error"))}showFormErrors(e){this.formErrors=e,Object.keys(e).forEach(t=>{const i=this.shadowRoot.querySelector(`[data-error="${t}"]`);let o=t;["addressLine","city","state","zipCode","country"].includes(t)&&(o=`address.${t}`),["cardholderName","cardNumber","expiryDate","cvv"].includes(t)?o=`payment.card.${t}`:t==="upiId"?o=`payment.upi.${t}`:["walletType","walletNumber"].includes(t)?o=`payment.wallet.${t}`:t==="bankName"&&(o=`payment.netbanking.${t}`);const r=this.shadowRoot.querySelector(`[data-field="${o}"]`);i&&(i.textContent=e[t],i.style.display="block"),r&&r.classList.add("error")})}proceedToCheckout(){if(this.currentModalStep==="plan-selection"){this.proceedToPersonalDetails();return}if(this.currentModalStep==="personal-details"){const e=this.validatePersonalDetails();if(Object.keys(e).length>0){this.showFormErrors(e);return}this.createCustomerAccount().then(t=>{console.log("Account created successfully, now placing order");const i=t.id||t.accountId||this.createdAccountId;if(!i)throw new Error("Account ID not found in account creation response");return this.placeOrder(i)}).then(t=>{console.log("Order placed successfully, now fetching invoices");const i=t.cart&&t.cart[0]&&t.cart[0].orderId;return i?this.getOrderInvoices(i).then(o=>(console.log("Invoices fetched, proceeding to payment"),{order:t,invoices:o})).catch(o=>(console.warn("Failed to fetch invoices, but continuing with payment:",o),{order:t,invoices:[]})):(console.warn("Order ID not found in response, skipping invoice fetch"),t)}).then(t=>{const{order:i,invoices:o}=t;console.log("Order and invoices ready, proceeding to payment"),this.orderData={...this.orderData,placedOrder:i,orderInvoices:o||[],accountId:i.accountId||this.createdAccountId},this.proceedToPaymentMethod()}).catch(t=>{console.error("Failed to process account and order:",t);let i="Failed to process your request. Please try again.";t.message&&t.message.includes("contact")?i="Failed to update contact information. Please check your details and try again.":t.message&&t.message.includes("account")?i="Failed to create account. Please check your details and try again.":t.message&&t.message.includes("order")&&(i="Failed to create order. Please try again."),alert(i)});return}if(this.currentModalStep==="payment-method"){const e=this.validatePaymentDetails();if(Object.keys(e).length>0){this.showFormErrors(e);return}this.initiatePayment()}}async initiatePayment(){try{const e=this.getPaymentSessionId();if(!e){alert("Payment session not found. Please try again.");return}if(console.log("Initiating payment with session ID:",e),console.log("Selected payment method:",this.selectedPaymentMethod),!this.cashfreeInstance){alert("Payment system not ready. Please refresh and try again.");return}switch(this.selectedPaymentMethod){case"card":await this.payViaCard(e);break;case"upi":await this.payViaUpi(e);break;case"wallet":await this.payViaWallet(e);break;case"netbanking":await this.payViaNetbanking(e);break;default:console.error("Unsupported payment method:",this.selectedPaymentMethod),alert("Selected payment method is not supported.")}}catch(e){console.error("Payment initiation failed:",e),alert("Failed to initiate payment. Please try again.")}}getPaymentSessionId(){const e=this.orderInvoices.invoices;return e&&e.length>0&&e[0].pgPaymentSessionId?e[0].pgPaymentSessionId:(console.error("Payment session ID not found in invoices:",this.orderInvoices),null)}async payViaCard(e){if(!this.cashfreeComponents.cardNumber||!this.cashfreeComponents.cardHolder||!this.cashfreeComponents.cardExpiry||!this.cashfreeComponents.cardCvv){console.error("Card components not ready"),alert("Card payment form not ready. Please try again.");return}try{console.log("Processing card payment...");const t={paymentMethod:this.cashfreeComponents.cardNumber,paymentSessionId:e},i=await this.cashfreeInstance.pay(t);console.log("Card payment result:",i),this.handlePaymentResult(i)}catch(t){console.error("Card payment failed:",t),alert("Card payment failed. Please check your details and try again.")}}async payViaUpi(e){if(!this.cashfreeComponents.upiCollect){console.error("UPI component not ready"),alert("UPI payment form not ready. Please try again.");return}try{console.log("Processing UPI payment...");const t={paymentMethod:this.cashfreeComponents.upiCollect,paymentSessionId:e},i=await this.cashfreeInstance.pay(t);console.log("UPI payment result:",i),this.handlePaymentResult(i)}catch(t){console.error("UPI payment failed:",t),alert("UPI payment failed. Please check your UPI ID and try again.")}}async payViaWallet(e){const t=this.paymentDetails.wallet.selectedProvider,i=this.paymentDetails.wallet.selectedComponent;if(!t||!i){console.error("Wallet not selected or component not ready"),alert("Please select a wallet to proceed with payment.");return}try{console.log(`Processing ${t} wallet payment...`);const o={paymentMethod:i,paymentSessionId:e},r=await this.cashfreeInstance.pay(o);this.handlePaymentResult(r)}catch(o){console.error("Wallet payment failed:",o),alert(`${t} payment failed. Please try again.`)}}async payViaNetbanking(e){try{console.log("Processing netbanking payment..."),this.cashfreeInstance.checkout({paymentSessionId:e,redirectTarget:"_self"})}catch(t){console.error("Netbanking payment failed:",t),alert("Netbanking payment failed. Please try again.")}}handlePaymentResult(e){if(console.log("Payment result:",e),e.error){console.error("Payment failed:",e.error),alert(`Payment failed: ${e.error.message||"Unknown error"}`);return}if(e.redirect){console.log("Redirecting to complete payment...");return}e.paymentDetails&&(console.log("Payment completed successfully"),this.orderData={...this.orderData,paymentResult:e.paymentDetails,selectedPaymentMethod:this.selectedPaymentMethod},this.currentModalStep="order-confirmation",this.render())}render(){this.loadTheme(),this.shadowRoot.innerHTML=`
      ${this.getStyles()}
      <div class="full-page-container">
        <div class="page-header">
          <div class="page-header-content">
            <h2>${this.getModalTitle()}</h2>
          </div>
          ${this.renderProgressStepper()}
        </div>

        <div class="page-content">
          ${this.renderModalContent()}
          </div>
        </div>
      </div>
    `,this.setupModalEventListeners()}getModalTitle(){switch(this.currentModalStep){case"plan-selection":return"Customize Your Plan";case"personal-details":return"Personal Details";case"payment-method":return"Payment Method";case"order-confirmation":return"Order Confirmation";default:return"Checkout"}}renderProgressStepper(){const e=[{key:"plan-selection",label:"Plan Selection",icon:"1"},{key:"personal-details",label:"Personal Details",icon:"2"},{key:"payment-method",label:"Payment Method",icon:"3"},{key:"order-confirmation",label:"Confirmation",icon:"✓"}];return`
      <div class="progress-indicator">
        <div class="progress-steps">
          ${e.map((t,i)=>`
            <div class="progress-step ${this.getStepStatus(t.key)}">
              <div class="step-icon">${t.icon}</div>
              <div class="step-label">${t.label}</div>
            </div>
            ${i<e.length-1?'<div class="step-connector"></div>':""}
          `).join("")}
        </div>
      </div>
    `}getStepStatus(e){const t=["plan-selection","personal-details","payment-method","order-confirmation"],i=t.indexOf(this.currentModalStep),o=t.indexOf(e);return o<i?"completed":o===i?"active":"upcoming"}renderModalContent(){switch(this.currentModalStep){case"plan-selection":return this.renderPlanSelectionContent();case"personal-details":return this.renderPersonalDetailsContent();case"payment-method":return this.renderPaymentMethodContent();case"order-confirmation":return this.renderOrderConfirmation()}}renderPlanSelectionContent(){return`
      <div class="page-body">
        <div class="plan-section">
          <h3>Selected Plan</h3>
          ${this.renderSelectedPlan()}
        </div>
        
        <div class="addons-section">
          <h3>Available Add-ons</h3>
          ${this.renderAddonsContent()}
        </div>

      </div>
      
      <div class="page-sidebar">
        <div class="order-summary">
          <div class="order-summary-content">
            <h3>Order Summary</h3>
            <div class="order-summary-details">
              ${this.renderOrderSummary()}
            </div>
            
            <div class="coupon-section">
              <h4>Coupon Code</h4>
              <div class="coupon-input-group">
                <input type="text" id="couponInput" placeholder="Enter coupon code" value="${this.couponCode}">
                <button class="apply-coupon-btn" id="applyCouponBtn">Apply</button>
              </div>
              ${this.getCouponStatusMessage()}
              ${this.isSuccessfullyAppliedCoupon()?`
                <div class="applied-coupon">
                  <span class="coupon-name">${this.getAppliedCouponName()}</span>
                  <button class="remove-coupon-btn" id="removeCouponBtn">×</button>
                </div>
              `:""}
            </div>
            
            <div class="available-discounts-section">
              <h4>Available Discounts</h4>
              <div class="available-discounts-grid">
                ${this.isLoadingOffers?`
                  <div class="loading-offers">
                    <div class="spinner"></div>
                    <span>Loading offers...</span>
                  </div>
                `:this.offersLoadError?`
                  <div class="offers-error">
                    <p>Unable to load offers at this time.</p>
                  </div>
                `:this.availableDiscounts.length===0?`
                  <p class="no-offers">No offers available for this plan.</p>
                `:this.availableDiscounts.map(e=>{var r;const t=((r=this.selectedDiscount)==null?void 0:r.id)===e.id,i=this.isDiscountSuccessfullyApplied(e.id),o=e.type==="percentage"?`${e.value}% off`:`$${e.value} off`;return`
                    <div class="available-discount-card ${t?"selected":""} ${i?"applied":""}" data-discount-id="${e.id}">
                      <div class="available-discount-header">
                        <span class="available-discount-name">${e.name}</span>
                        ${i?`<button class="remove-discount-btn" data-discount-id="${e.id}" title="Remove discount">×</button>`:`<span class="available-discount-value">${o}</span>`}
                      </div>
                      <p class="available-discount-description">${e.description}</p>
                      ${i?'<span class="discount-applied-badge">✓ Applied</span>':`<span class="available-discount-code">Code: ${e.code}</span>`}
                    </div>
                  `}).join("")}
              </div>
            </div>
          </div>

          <div class="sidebar-footer">
            <button class="proceed-btn" id="proceedBtn">
              Next
            </button>
          </div>
        </div>
      </div>
    `}renderPersonalDetailsContent(){return`
      <div class="page-body">
        <div class="personal-details-form">
          <h3>Personal Information</h3>
          <div class="form-grid">
            <div class="form-group">
              <label for="firstName">First Name *</label>
              <input type="text" id="firstName" data-field="firstName" 
                     value="${this.personalDetails.firstName}" 
                     placeholder="Enter your first name">
              <div class="field-error" data-error="firstName"></div>
            </div>
            
            <div class="form-group">
              <label for="lastName">Last Name *</label>
              <input type="text" id="lastName" data-field="lastName" 
                     value="${this.personalDetails.lastName}" 
                     placeholder="Enter your last name">
              <div class="field-error" data-error="lastName"></div>
            </div>
            
            <div class="form-group full-width">
              <label for="email">Email Address *</label>
              <input type="email" id="email" data-field="email" 
                     value="${this.personalDetails.email}" 
                     placeholder="Enter your email address">
              <div class="field-error" data-error="email"></div>
            </div>
            
            <div class="form-group">
              <label for="phone">Phone Number *</label>
              <input type="tel" id="phone" data-field="phone" 
                     value="${this.personalDetails.phone}" 
                     placeholder="Enter your phone number">
              <div class="field-error" data-error="phone"></div>
            </div>
            
            <div class="form-group">
              <label for="company">Company (Optional)</label>
              <input type="text" id="company" data-field="company" 
                     value="${this.personalDetails.company}" 
                     placeholder="Enter company name">
            </div>
          </div>

          <h3>Billing Address</h3>
          <div class="form-grid">
            <div class="form-group full-width">
              <label for="addressLine">Address Line*</label>
              <input type="text" id="addressLine" data-field="address.addressLine" 
                     value="${this.personalDetails.address.addressLine}" 
                     placeholder="Enter your address">
              <div class="field-error" data-error="addressLine"></div>
            </div>
            
            <div class="form-group">
              <label for="city">City *</label>
              <input type="text" id="city" data-field="address.city" 
                     value="${this.personalDetails.address.city}" 
                     placeholder="Enter your city">
              <div class="field-error" data-error="city"></div>
            </div>
            
            <div class="form-group">
              <label for="state">State/Province *</label>
              <input type="text" id="state" data-field="address.state" 
                     value="${this.personalDetails.address.state}" 
                     placeholder="Enter state/province">
              <div class="field-error" data-error="state"></div>
            </div>
            
            <div class="form-group">
              <label for="zipCode">ZIP/Postal Code *</label>
              <input type="text" id="zipCode" data-field="address.zipCode" 
                     value="${this.personalDetails.address.zipCode}" 
                     placeholder="Enter ZIP/postal code">
              <div class="field-error" data-error="zipCode"></div>
            </div>
            
            <div class="form-group">
              <label for="country">Country *</label>
              <select id="country" data-field="address.country">
                <option value="">Select Country</option>
                <option value="US" ${this.personalDetails.address.country==="US"?"selected":""}>United States</option>
                <option value="CA" ${this.personalDetails.address.country==="CA"?"selected":""}>Canada</option>
                <option value="GB" ${this.personalDetails.address.country==="GB"?"selected":""}>United Kingdom</option>
                <option value="AU" ${this.personalDetails.address.country==="AU"?"selected":""}>Australia</option>
                <option value="DE" ${this.personalDetails.address.country==="DE"?"selected":""}>Germany</option>
                <option value="FR" ${this.personalDetails.address.country==="FR"?"selected":""}>France</option>
                <option value="IND" ${this.personalDetails.address.country==="IND"?"selected":""}>India</option>
              </select>
              <div class="field-error" data-error="country"></div>
            </div>
          </div>
        </div>
      </div>
      
      <div class="page-sidebar">
        <div class="order-summary">
          <div class="order-summary-content">
            <h3>Order Summary</h3>
            <div class="order-summary-details">
              ${this.renderOrderSummary()}
            </div>
          </div>
          
          <div class="sidebar-footer">
            <div class="form-actions">
              <button class="back-btn" id="backBtn">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                  <path d="M10 3L5 8L10 13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
                Back
              </button>
              <button class="proceed-btn" id="proceedBtn" ${this.isPersonalDetailsFormValid()?"":"disabled"}>
                Next
              </button>
            </div>
          </div>
        </div>
      </div>
    `}renderPaymentMethodContent(){return this.selectedPaymentMethod?this.renderPaymentMethodForm():this.renderPaymentMethodSelection()}renderPaymentMethodSelection(){return`
      <div class="page-body">
        <div class="payment-method-selection">
          <h3>Choose Payment Method</h3>
          <div class="payment-methods-grid">
            <div class="payment-method-card" data-method="upi">
              <div class="payment-icon">
                <svg width="24" height="24" viewBox="0 0 32 32" fill="none">
                  <rect x="4" y="8" width="24" height="16" rx="3" stroke="#526484" stroke-width="2"/>
                  <path d="M8 16h16M12 12h8" stroke="#526484" stroke-width="2" stroke-linecap="round"/>
                </svg>
              </div>
              <h4>UPI</h4>
              <p>Google Pay, PhonePe, Paytm</p>
            </div>

            <div class="payment-method-card" data-method="card">
              <div class="payment-icon">
                <svg width="24" height="24" viewBox="0 0 32 32" fill="none">
                  <rect x="4" y="8" width="24" height="16" rx="3" stroke="#526484" stroke-width="2"/>
                  <path d="M4 14h24" stroke="#526484" stroke-width="2"/>
                  <rect x="6" y="18" width="4" height="2" fill="#526484"/>
                </svg>
              </div>
              <h4>Credit/Debit Card</h4>
              <p>Visa, Mastercard, Rupay</p>
            </div>

            <div class="payment-method-card" data-method="wallet">
              <div class="payment-icon">
                <svg width="24" height="24" viewBox="0 0 32 32" fill="none">
                  <rect x="6" y="8" width="20" height="16" rx="2" stroke="#526484" stroke-width="2"/>
                  <circle cx="20" cy="16" r="2" stroke="#526484" stroke-width="2"/>
                  <path d="M6 12h20" stroke="#526484" stroke-width="2"/>
                </svg>
              </div>
              <h4>Digital Wallets</h4>
              <p>Paytm, Amazon Pay, Mobikwik</p>
            </div>

            <div class="payment-method-card" data-method="netbanking">
              <div class="payment-icon">
                <svg width="24" height="24" viewBox="0 0 32 32" fill="none">
                  <rect x="6" y="10" width="20" height="12" rx="2" stroke="#526484" stroke-width="2"/>
                  <path d="M10 6L16 10L22 6" stroke="#526484" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                  <path d="M10 16h4M18 16h4" stroke="#526484" stroke-width="2" stroke-linecap="round"/>
                </svg>
              </div>
              <h4>Net Banking</h4>
              <p>All major banks</p>
            </div>
          </div>
        </div>
      </div>
      
      <div class="page-sidebar">
        <div class="order-summary">
          <div class="order-summary-content">
            <h3>Order Summary</h3>
            <div class="order-summary-details">
              ${this.renderOrderSummary()}
            </div>
          </div>
          
          <div class="sidebar-footer">
            <div class="form-actions">
              <button class="back-btn" id="backBtn">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                  <path d="M10 3L5 8L10 13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
                Back
              </button>
            </div>
          </div>
        </div>
      </div>
    `}renderPaymentMethodForm(){let e="";switch(this.selectedPaymentMethod){case"upi":e=this.renderUPIForm();break;case"card":e=this.renderCardForm();break;case"wallet":e=this.renderWalletForm();break;case"netbanking":e=this.renderNetBankingForm();break}return`
      <div class="page-body">
        <div class="payment-form-section">
          <div class="selected-method-header">
            <button class="change-method-btn" id="changeMethodBtn">
              <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                <path d="M10 3L5 8L10 13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
              Change Payment Method
            </button>
            <h3>${this.getPaymentMethodTitle()}</h3>
          </div>
          ${e}
        </div>
      </div>
      
      <div class="page-sidebar">
        <div class="order-summary">
          <div class="order-summary-content">
            <h3>Order Summary</h3>
            <div class="order-summary-details">
              ${this.renderOrderSummary()}
            </div>
          </div>
          
          <div class="sidebar-footer">
            <div class="form-actions">
              <button class="back-btn" id="backBtn">
                <svg width="16" height="16" viewBox="0 0 16 16" fill="none">
                  <path d="M10 3L5 8L10 13" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
                Back
              </button>
              <button class="proceed-btn" id="proceedBtn">
                Complete Order
              </button>
            </div>
          </div>
        </div>
      </div>
    `}getPaymentMethodTitle(){switch(this.selectedPaymentMethod){case"upi":return"UPI Payment";case"card":return"Card Payment";case"wallet":return"Digital Wallet";case"netbanking":return"Net Banking";default:return"Payment"}}renderUPIForm(){return`
      <div class="payment-form">
        <div class="form-group">
          <label for="upiCollect">UPI ID *</label>
          <div id="upiCollect" class="cashfree-input-container"></div>
          <div class="field-error" data-error="upiId"></div>
        </div>
        <div class="cashfree-loading" id="cashfreeUpiLoading" style="display: none;">
          <p>Loading secure UPI form...</p>
        </div>
        <div class="upi-note">
          <p>Enter your UPI ID to complete the payment. You'll receive a payment request on your UPI app.</p>
        </div>
      </div>
    `}renderCardForm(){return`
      <div class="payment-form">
        <div class="form-grid">
          <div class="form-group full-width">
            <label for="cardHolder">Cardholder Name *</label>
            <div id="cardHolder" class="cashfree-input-container"></div>
            <div class="field-error" data-error="cardholderName"></div>
          </div>
          
          <div class="form-group full-width">
            <label for="cardNumber">Card Number *</label>
            <div id="cardNumber" class="cashfree-input-container"></div>
            <div class="field-error" data-error="cardNumber"></div>
          </div>
          
          <div class="form-group">
            <label for="cardExpiry">Expiry Date *</label>
            <div id="cardExpiry" class="cashfree-input-container"></div>
            <div class="field-error" data-error="expiryDate"></div>
          </div>
          
          <div class="form-group">
            <label for="cardCvv">CVV *</label>
            <div id="cardCvv" class="cashfree-input-container"></div>
            <div class="field-error" data-error="cvv"></div>
          </div>
        </div>
        <div class="cashfree-loading" id="cashfreeLoading" style="display: none;">
          <p>Loading secure payment form...</p>
        </div>
      </div>
    `}renderWalletForm(){return`
      <div class="payment-form">
        <div class="wallet-options">
          <label class="wallet-section-label">Select Wallet *</label>
          <div class="wallet-providers">
            ${[{id:"phonepe",name:"PhonePe",provider:"phonepe"},{id:"amazon",name:"Amazon Pay",provider:"amazon"},{id:"paytm",name:"Paytm",provider:"paytm"},{id:"freecharge",name:"FreeCharge",provider:"freecharge"},{id:"mobikwik",name:"Mobikwik",provider:"mobikwik"}].map(t=>`
              <div class="wallet-provider-container">
                <div id="${t.id}" class="cashfree-wallet-container" data-provider="${t.provider}"></div>
              </div>
            `).join("")}
          </div>
        </div>
        
        <div class="cashfree-loading" id="cashfreeWalletLoading" style="display: none;">
          <p>Loading wallet options...</p>
        </div>
        
        <div class="wallet-note">
          <p>Click on your preferred wallet to continue with the payment. You'll be redirected to complete the payment securely.</p>
        </div>
      </div>
    `}renderNetBankingForm(){return`
      <div class="payment-form">
        <div class="form-group">
          <label for="bankName">Select Bank *</label>
          <select id="bankName" data-field="payment.netbanking.bankName">
            <option value="">Choose Your Bank</option>
            <option value="sbi" ${this.paymentDetails.netbanking.bankName==="sbi"?"selected":""}>State Bank of India</option>
            <option value="hdfc" ${this.paymentDetails.netbanking.bankName==="hdfc"?"selected":""}>HDFC Bank</option>
            <option value="icici" ${this.paymentDetails.netbanking.bankName==="icici"?"selected":""}>ICICI Bank</option>
            <option value="axis" ${this.paymentDetails.netbanking.bankName==="axis"?"selected":""}>Axis Bank</option>
            <option value="kotak" ${this.paymentDetails.netbanking.bankName==="kotak"?"selected":""}>Kotak Mahindra Bank</option>
            <option value="pnb" ${this.paymentDetails.netbanking.bankName==="pnb"?"selected":""}>Punjab National Bank</option>
            <option value="canara" ${this.paymentDetails.netbanking.bankName==="canara"?"selected":""}>Canara Bank</option>
            <option value="bob" ${this.paymentDetails.netbanking.bankName==="bob"?"selected":""}>Bank of Baroda</option>
          </select>
          <div class="field-error" data-error="bankName"></div>
        </div>
        <div class="netbanking-note">
          <p>You will be redirected to your bank's website to complete the payment securely.</p>
        </div>
      </div>
    `}renderOrderConfirmation(){if(!this.orderData)return"<div>No order data available</div>";const e={card:"Credit/Debit Card",upi:"UPI",wallet:"Digital Wallet",netbanking:"Net Banking"}[this.orderData.paymentMethod]||this.orderData.paymentMethod;return`
      <div class="page-body">
        <div class="confirmation-container">
          <div class="confirmation-success">
            <div class="success-icon-large">
              <svg width="80" height="80" viewBox="0 0 80 80" fill="none">
                <circle cx="40" cy="40" r="38" stroke="#10b981" stroke-width="4" fill="#f0fdf4"/>
                <path d="M25 40L35 50L55 30" stroke="#10b981" stroke-width="4" stroke-linecap="round" stroke-linejoin="round"/>
              </svg>
            </div>
            <h2>Order Confirmed!</h2>
            <p class="confirmation-message">Your subscription has been successfully processed.</p>
          </div>

          <div class="confirmation-details">
            <h3>Order Summary</h3>
            
            <div class="detail-section">
              <h4>Subscription Details</h4>
              <div class="detail-row">
                <span class="detail-label">Plan:</span>
                <span class="detail-value">${this.orderData.selectedPlan.name}</span>
              </div>
              ${this.orderData.selectedAddons.length>0?`
                <div class="detail-row">
                  <span class="detail-label">Add-ons:</span>
                  <span class="detail-value">${this.orderData.selectedAddons.map(t=>t.name).join(", ")}</span>
                </div>
              `:""}
            </div>

            <div class="detail-section">
              <h4>Billing Information</h4>
              <div class="detail-row">
                <span class="detail-label">Name:</span>
                <span class="detail-value">${this.orderData.personalDetails.firstName} ${this.orderData.personalDetails.lastName}</span>
              </div>
              <div class="detail-row">
                <span class="detail-label">Email:</span>
                <span class="detail-value">${this.orderData.personalDetails.email}</span>
              </div>
              <div class="detail-row">
                <span class="detail-label">Payment Method:</span>
                <span class="detail-value">${e}</span>
              </div>
            </div>

            <div class="detail-section">
              <h4>Payment Summary</h4>
              <div class="detail-row">
                <span class="detail-label">Subtotal:</span>
                <span class="detail-value">$${this.orderData.originalTotal.toFixed(2)}</span>
              </div>
              ${this.orderData.totalDiscount>0?`
                <div class="detail-row discount-row">
                  <span class="detail-label">Discount:</span>
                  <span class="detail-value">-$${this.orderData.totalDiscount.toFixed(2)}</span>
                </div>
              `:""}
              <div class="detail-row total-row">
                <span class="detail-label">Total:</span>
                <span class="detail-value">$${this.orderData.total.toFixed(2)}/${this.orderData.selectedPlan.period}</span>
              </div>
            </div>

            <div class="confirmation-note">
              <p>✉️ A confirmation email has been sent to <strong>${this.orderData.personalDetails.email}</strong></p>
              <p>📅 Your subscription will begin immediately and will renew on ${this.getNextBillingDate()}.</p>
            </div>
          </div>
        </div>
      </div>
      
      <div class="page-sidebar">
        <div class="order-summary">
          <div class="order-summary-content">
            <div class="confirmation-actions">
              <h3>What's Next?</h3>
              <div class="next-steps">
                <div class="next-step">
                  <span class="step-number">1</span>
                  <span class="step-text">Check your email for login credentials</span>
                </div>
                <div class="next-step">
                  <span class="step-number">2</span>
                  <span class="step-text">Access your dashboard to get started</span>
                </div>
                <div class="next-step">
                  <span class="step-number">3</span>
                  <span class="step-text">Explore features and customize settings</span>
                </div>
              </div>
            </div>
          </div>
          
          <div class="sidebar-footer">
            <button class="proceed-btn" id="proceedBtn" onclick="window.location.href='/dashboard'">
              Go to Dashboard
            </button>
            <button class="close-confirmation-btn" id="closeConfirmationBtn">
              Close
            </button>
          </div>
        </div>
      </div>
    `}getNextBillingDate(){const e=new Date;return this.orderData&&this.orderData.selectedPlan.period==="month"?e.setMonth(e.getMonth()+1):e.setFullYear(e.getFullYear()+1),e.toLocaleDateString("en-US",{year:"numeric",month:"long",day:"numeric"})}selectPaymentMethod(e){this.selectedPaymentMethod=e,this.render()}getCashfreeStyleObject(){const e=getComputedStyle(this.shadowRoot.host),t=(i,o)=>e.getPropertyValue(i).trim()||o;return{base:{fontSize:t("--billhive-font-size-body-text","0.9375rem"),fontFamily:t("--billhive-font-family","'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif"),backgroundColor:"#FFFFFF",":focus":{border:`1px solid ${t("--billhive-accent-color","#5b5bd6")}`},border:`1px solid ${t("--billhive-border-color","#e5e7eb")}`,borderRadius:t("--billhive-element-border-radius","4px"),padding:"12px",color:t("--billhive-text-color","#111827")},invalid:{color:t("--billhive-error-color","#dc2626"),border:`1px solid ${t("--billhive-error-color","#dc2626")}`}}}async setupCashfreeCardComponents(){if(!this.cashfreeInstance){console.error("Cashfree SDK not loaded"),this.showCardFormError("Secure payment form could not be loaded. Please try again or select a different payment method.");return}try{const e=this.shadowRoot.querySelector("#cashfreeLoading");e&&(e.style.display="block");const t=this.getCashfreeStyleObject(),i={values:{placeholder:"1234 5678 9012 3456"},style:t};this.cashfreeComponents.cardNumber=this.cashfreeInstance.create("cardNumber",i);const o=this.shadowRoot.querySelector("#cardNumber");o&&await this.cashfreeComponents.cardNumber.mount(o);const r={values:{placeholder:"Enter cardholder name"},style:t};this.cashfreeComponents.cardHolder=this.cashfreeInstance.create("cardHolder",r);const n=this.shadowRoot.querySelector("#cardHolder");n&&await this.cashfreeComponents.cardHolder.mount(n);const l={values:{placeholder:"MM/YY"},style:t};this.cashfreeComponents.cardExpiry=this.cashfreeInstance.create("cardExpiry",l);const s=this.shadowRoot.querySelector("#cardExpiry");s&&await this.cashfreeComponents.cardExpiry.mount(s);const a={values:{placeholder:"123"},style:t};this.cashfreeComponents.cardCvv=this.cashfreeInstance.create("cardCvv",a);const d=this.shadowRoot.querySelector("#cardCvv");d&&await this.cashfreeComponents.cardCvv.mount(d),this.cashfreeComponents.cardNumber.on("change",p=>{p.value&&p.value.cvvLength&&this.cashfreeComponents.cardCvv.update({cvvLength:p.value.cvvLength}),this.validateCashfreeCardForm()}),this.cashfreeComponents.cardHolder.on("change",()=>{this.validateCashfreeCardForm()}),this.cashfreeComponents.cardExpiry.on("change",()=>{this.validateCashfreeCardForm()}),this.cashfreeComponents.cardCvv.on("change",()=>{this.validateCashfreeCardForm()}),e&&(e.style.display="none"),console.log("✅ Cashfree card components mounted successfully")}catch(e){console.error("Failed to setup Cashfree card components:",e),this.showCardFormError("Failed to initialize secure payment form. Please refresh and try again.")}}showCardFormError(e){["#cardNumber","#cardHolder","#cardExpiry","#cardCvv"].forEach(i=>{const o=this.shadowRoot.querySelector(i);o&&(o.innerHTML=`<div style="color: #df1b41; padding: 12px; border: 1px solid #df1b41; border-radius: 6px; background: #fff5f5;">${e}</div>`)})}validateCashfreeCardForm(){if(this.cashfreeComponents.cardNumber&&this.cashfreeComponents.cardHolder&&this.cashfreeComponents.cardExpiry&&this.cashfreeComponents.cardCvv){const e=this.cashfreeComponents.cardNumber.isComplete()&&this.cashfreeComponents.cardHolder.isComplete()&&this.cashfreeComponents.cardExpiry.isComplete()&&this.cashfreeComponents.cardCvv.isComplete();this.paymentDetails.card.isValid=e,e&&(delete this.formErrors.cardNumber,delete this.formErrors.cardholderName,delete this.formErrors.expiryDate,delete this.formErrors.cvv)}}async setupCashfreeUpiComponent(){if(!this.cashfreeInstance){console.error("Cashfree SDK not loaded"),this.showUpiFormError("Secure UPI form could not be loaded. Please try again or select a different payment method.");return}try{const e=this.shadowRoot.querySelector("#cashfreeUpiLoading");e&&(e.style.display="block");const t={fields:{upiId:{label:"Enter your UPI ID",placeholder:"yourname@paytm"}},style:this.getCashfreeStyleObject()};this.cashfreeComponents.upiCollect=this.cashfreeInstance.create("upiCollect",t);const i=this.shadowRoot.querySelector("#upiCollect");i&&await this.cashfreeComponents.upiCollect.mount(i),this.cashfreeComponents.upiCollect.on("change",()=>{this.validateCashfreeUpiForm()}),e&&(e.style.display="none"),console.log("✅ Cashfree UPI component mounted successfully")}catch(e){console.error("Failed to setup Cashfree UPI component:",e),this.showUpiFormError("Failed to initialize secure UPI form. Please refresh and try again.")}}showUpiFormError(e){const t=this.shadowRoot.querySelector("#upiCollect");t&&(t.innerHTML=`<div style="color: #df1b41; padding: 12px; border: 1px solid #df1b41; border-radius: 6px; background: #fff5f5;">${e}</div>`)}validateCashfreeUpiForm(){if(this.cashfreeComponents.upiCollect){const e=this.cashfreeComponents.upiCollect.isComplete();this.paymentDetails.upi.isValid=e,e&&delete this.formErrors.upiId}}async setupCashfreeWalletComponents(){if(!this.cashfreeInstance){console.error("Cashfree SDK not loaded"),this.showWalletFormError("Secure wallet options could not be loaded. Please try again or select a different payment method.");return}try{const e=this.shadowRoot.querySelector("#cashfreeWalletLoading");e&&(e.style.display="block");const t=[{id:"phonepe",provider:"phonepe",buttonText:"PhonePe"},{id:"amazon",provider:"amazon",buttonText:"Amazon Pay"},{id:"paytm",provider:"paytm",buttonText:"Paytm"},{id:"freecharge",provider:"freecharge",buttonText:"FreeCharge"},{id:"mobikwik",provider:"mobikwik",buttonText:"Mobikwik"}],i=getComputedStyle(this.shadowRoot.host),o=(n,l)=>i.getPropertyValue(n).trim()||l,r={base:{fontSize:o("--billhive-font-size-body-text","0.9375rem"),padding:"12px",display:"flex",alignItems:"center",borderRadius:o("--billhive-element-border-radius","4px"),gap:"10px",border:`1px solid ${o("--billhive-border-color","#e5e7eb")}`,backgroundColor:"#FFFFFF",cursor:"pointer",fontFamily:o("--billhive-font-family","'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif"),color:o("--billhive-text-color","#111827"),":hover":{backgroundColor:o("--billhive-input-components-color","#f9fafb")}}};for(const n of t){const l={values:{provider:n.provider,phone:"1234567890",buttonText:n.buttonText,buttonIcon:!0},style:r},s=this.cashfreeInstance.create("wallet",l),a=this.shadowRoot.querySelector(`#${n.id}`);a&&(await s.mount(a),this.cashfreeComponents.wallets.set(n.provider,s),s.on("click",d=>{console.log(`${n.buttonText} wallet clicked:`,d),this.handleWalletSelection(n.provider,s)}))}e&&(e.style.display="none"),console.log("✅ Cashfree wallet components mounted successfully")}catch(e){console.error("Failed to setup Cashfree wallet components:",e),this.showWalletFormError("Failed to initialize wallet options. Please refresh and try again.")}}handleWalletSelection(e,t){this.paymentDetails.wallet.selectedProvider=e,this.paymentDetails.wallet.selectedComponent=t,this.paymentDetails.wallet.isValid=!0,delete this.formErrors.walletType,console.log(`Wallet ${e} selected and ready for payment`)}showWalletFormError(e){["#phonepe","#amazon","#paytm","#freecharge","#mobikwik"].forEach(i=>{const o=this.shadowRoot.querySelector(i);o&&(o.innerHTML=`<div style="color: #df1b41; padding: 12px; border: 1px solid #df1b41; border-radius: 6px; background: #fff5f5; text-align: center;">${e}</div>`)})}setupPaymentFormListeners(){const e=this.selectedPaymentMethod;if(e==="upi")this.setupCashfreeUpiComponent();else if(e==="card")this.setupCashfreeCardComponents();else if(e==="wallet")this.setupCashfreeWalletComponents();else if(e==="netbanking"){const t=this.shadowRoot.querySelector("#bankName");t&&t.addEventListener("change",i=>{this.handlePaymentInputChange("netbanking.bankName",i.target.value)})}}handlePaymentInputChange(e,t){const i=e.split(".");if(i.length===2){const[o,r]=i;this.paymentDetails[o]||(this.paymentDetails[o]={}),this.paymentDetails[o][r]=t,delete this.formErrors[r],this.updateFieldError(`payment.${o}.${r}`)}}setupModalEventListeners(){var l;this.planId&&!((l=this.selectedPlan)!=null&&l.ratePlanPriceId)&&(this.isLoadingPlan=!0,this.isLoadingAddons=!0,this.render(),this.loadPlanFromApi().catch(s=>{console.error("Failed to load plan:",s)}));const e=this.shadowRoot.querySelector("#proceedBtn"),t=this.shadowRoot.querySelector("#backBtn"),i=this.shadowRoot.querySelector("#couponInput"),o=this.shadowRoot.querySelector("#applyCouponBtn"),r=this.shadowRoot.querySelector("#removeCouponBtn");if(e==null||e.addEventListener("click",()=>this.proceedToCheckout()),t==null||t.addEventListener("click",()=>this.goBackToPlanSelection()),this.shadowRoot.querySelectorAll(".addon-checkbox").forEach(s=>{s.addEventListener("change",a=>{this.toggleAddon(a.target.dataset.addonId)})}),this.shadowRoot.querySelectorAll(".addon-quantity-input").forEach(s=>{s.addEventListener("input",a=>{let d=a.target.value.replace(/[^\d]/g,"");d===""&&(d="1"),this.handleAddonQuantityChange(a.target.dataset.addonId,d)}),s.addEventListener("keypress",a=>{!/[\d]/.test(a.key)&&!["Backspace","Delete","Tab","Enter","ArrowLeft","ArrowRight"].includes(a.key)&&a.preventDefault()}),s.addEventListener("blur",a=>{const d=a.target.dataset.addonId,p=a.target.value;(!p||parseInt(p)<1)&&this.handleAddonQuantityChange(d,"1")})}),this.shadowRoot.querySelectorAll(".qty-btn").forEach(s=>{s.addEventListener("click",a=>{const d=a.target.dataset.addonId,p=a.target.dataset.action,c=this.addonQuantities.get(d)||1;p==="increase"&&c<999?this.handleAddonQuantityChange(d,c+1):p==="decrease"&&c>1&&this.handleAddonQuantityChange(d,c-1),this.render()})}),this.shadowRoot.querySelectorAll(".available-discount-card").forEach(s=>{s.addEventListener("click",a=>{if(a.target.classList.contains("remove-discount-btn"))return;const d=a.currentTarget.dataset.discountId;this.selectDiscount(d)})}),this.shadowRoot.querySelectorAll(".available-discount-card .remove-discount-btn").forEach(s=>{s.addEventListener("click",a=>{a.stopPropagation();const d=a.target.dataset.discountId;this.removeDiscount(d)})}),i==null||i.addEventListener("input",s=>{this.couponCode=s.target.value}),i==null||i.addEventListener("keypress",s=>{s.key==="Enter"&&this.applyCouponCode()}),o==null||o.addEventListener("click",()=>this.applyCouponCode()),r==null||r.addEventListener("click",()=>this.removeCoupon()),this.currentModalStep==="personal-details"&&(["firstName","lastName","email","phone","company"].forEach(s=>{const a=this.shadowRoot.querySelector(`[data-field="${s}"]`);a&&(a.addEventListener("input",d=>{this.handleInputChange(s,d.target.value)}),s==="email"&&(a.addEventListener("input",d=>{const p=d.target.value.trim();this.existingAccount&&this.existingAccount.email!==p&&(this.existingAccount=null,this.hideExistingAccountMessage())}),a.addEventListener("blur",d=>{const p=d.target.value.trim();p&&/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(p)?this.handleEmailCheck(p):p||(this.existingAccount=null,this.hideExistingAccountMessage())})))}),["address.addressLine","address.city","address.state","address.zipCode","address.country"].forEach(s=>{const a=this.shadowRoot.querySelector(`[data-field="${s}"]`);a&&(a.addEventListener("input",d=>{this.handleInputChange(s,d.target.value)}),a.tagName==="SELECT"&&a.addEventListener("change",d=>{this.handleInputChange(s,d.target.value)}))})),this.currentModalStep==="payment-method"){this.shadowRoot.querySelectorAll(".payment-method-card").forEach((d,p)=>{const c=d.dataset.method;d.addEventListener("click",m=>{this.selectPaymentMethod(c)})});const a=this.shadowRoot.querySelector("#changeMethodBtn");a&&a.addEventListener("click",()=>{this.selectedPaymentMethod=null,this.render()}),this.selectedPaymentMethod&&this.setupPaymentFormListeners()}if(this.currentModalStep==="order-confirmation"){const s=this.shadowRoot.querySelector("#closeConfirmationBtn");s&&s.addEventListener("click",()=>{const a=new CustomEvent("order-completed",{detail:this.orderData,bubbles:!0});this.dispatchEvent(a),this.close()})}const n=this.shadowRoot.querySelector("#retryPlanLoad");n&&n.addEventListener("click",s=>{s.preventDefault(),this.loadPlanFromApi()})}renderSelectedPlan(){if(console.log("renderSelectedPlan:",{isLoadingPlan:this.isLoadingPlan,selectedPlan:this.selectedPlan,planId:this.planId,planLoadError:this.planLoadError}),this.isLoadingPlan&&!this.selectedPlan)return`
        <div class="selected-plan loading">
          <div class="loading-spinner"></div>
          <p>Loading plan details...</p>
        </div>
      `;if(this.planLoadError)return`
        <div class="selected-plan error">
          <div class="error-icon">⚠️</div>
          <p>Failed to load plan details: ${this.planLoadError}</p>
          <button class="retry-btn" id="retryPlanLoad">Retry</button>
        </div>
      `;if(!this.selectedPlan)return"<p>1 No plan selected</p>";const e=i=>({USD:"$",EUR:"€",GBP:"£",INR:"₹",JPY:"¥",CAD:"C$",AUD:"A$",CHF:"CHF",CNY:"¥",SEK:"kr"})[i==null?void 0:i.toUpperCase()]||i||"$",t=this.selectedPlan.currencyCode?e(this.selectedPlan.currencyCode):"$";return`
      <div class="selected-plan">
        <div class="plan-info">
          <div class="plan-header">
            <span class="plan-name">${this.selectedPlan.name}</span>
          </div>
          
          
            ${this.selectedPlan.productName?`<div class="detail-item"><span class="label">Product:</span> <span class="value">${this.selectedPlan.productName}</span></div>`:""}
    

          ${this.selectedPlan.isTrial&&this.selectedPlan.trialPeriod?`<div class="trial-info">
              <span class="trial-badge">Free Trial</span>
              <span class="trial-details">${this.selectedPlan.trialPeriod.periodName} free trial</span>
            </div>`:""}
            
        </div>
        
        <div class="plan-price">
          <div class="price-display">
            <span class="price">${t}${this.selectedPlan.price}</span>
            <span class="period">/${this.selectedPlan.period}</span>
          </div>
          ${this.selectedPlan.billingPeriod?`<div class="billing-info">Billed ${this.selectedPlan.billingPeriod.periodName}</div>`:""}
        </div>
      </div>
    `}renderAddonsContent(){return this.isLoadingAddons?'<div class="loading-state">Loading available add-ons...</div>':this.addonsLoadError?`<div class="error-state">Failed to load add-ons: ${this.addonsLoadError}</div>`:!this.addons||this.addons.length===0?'<div class="empty-state">No add-ons available for this plan.</div>':`
      <div class="addons-grid">
        ${this.addons.map(e=>this.renderAddon(e)).join("")}
      </div>
    `}getCurrencySymbol(e){return{USD:"$",EUR:"€",GBP:"£",INR:"₹",JPY:"¥",CNY:"¥",AUD:"A$",CAD:"C$",CHF:"Fr",SEK:"kr",NZD:"NZ$"}[e]||e||"$"}formatDisplayDate(e){if(!e)return"";try{return new Date(e).toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"})}catch(t){return console.error("Error formatting date:",t),e}}isCouponRejected(){return!this.orderEstimate||!this.orderEstimate.cart?!1:this.orderEstimate.cart.some(e=>{var i,o;return(e.itemType==="Discount"||e.itemType==="Coupon"||((i=e.description)==null?void 0:i.toLowerCase().includes("coupon"))||((o=e.description)==null?void 0:o.toLowerCase().includes("discount")))&&e.status==="Rejected"})}getCouponStatusMessage(){var t;if(!this.orderEstimate||!this.orderEstimate.cart)return"";const e=this.orderEstimate.cart.find(i=>{var r,n;return(i.itemType==="Discount"||i.itemType==="Coupon"||((r=i.description)==null?void 0:r.toLowerCase().includes("coupon"))||((n=i.description)==null?void 0:n.toLowerCase().includes("discount")))&&i.status==="Rejected"});return e&&((t=e.options)!=null&&t.reason)?`<div class="coupon-error">${e.options.reason}</div>`:""}isSuccessfullyAppliedCoupon(){return!this.orderEstimate||!this.orderEstimate.cart?!1:!!this.orderEstimate.cart.find(t=>{var o,r;return(t.itemType==="Coupon"||((o=t.description)==null?void 0:o.toLowerCase().includes("coupon"))&&!((r=t.itemType)!=null&&r.includes("Discount")))&&t.status!=="Rejected"})}getAppliedCouponName(){if(!this.orderEstimate||!this.orderEstimate.cart)return"";const e=this.orderEstimate.cart.find(t=>{var o,r;return(t.itemType==="Coupon"||((o=t.description)==null?void 0:o.toLowerCase().includes("coupon"))&&!((r=t.itemType)!=null&&r.includes("Discount")))&&t.status!=="Rejected"});return e?e.description:""}isDiscountSuccessfullyApplied(e){return!this.orderEstimate||!this.orderEstimate.cart?!1:this.orderEstimate.cart.some(t=>t.itemType==="Discount"&&(t.itemId===e||t.discountId===e)&&t.status!=="Rejected")}renderAddon(e){const t=this.selectedAddons.has(e.id),i=this.getCurrencySymbol(e.currencyCode),o=e.period,r=e.unitOfMeasurement?` per ${e.unitOfMeasurement}`:"",n=this.addonQuantities.get(e.id)||1;return`
      <div class="addon-card ${t?"selected":""}">
        
        <div class="addon-content">
          <div class="addon-left">
            <label class="addon-label">
              <input 
                type="checkbox" 
                class="addon-checkbox" 
                data-addon-id="${e.id}"
                ${t?"checked":""}
              >
              <div class="addon-info">
                <span class="addon-name">${e.name}</span>
                <p class="addon-description">${e.description}</p>
              </div>
            </label>
          </div>
          <div class="addon-right">
            <div class="addon-price-section">
              <span class="addon-price">
                ${e.isPriceIncluded?"Included":`+${i}${e.price}/${o}${r}`}
              </span>
              ${t?`
                <div class="addon-quantity-control">
                  <label for="addon-qty-${e.id}" style="margin-right: 8px;">Quantity:</label>
                  <div class="quantity-input-group" style="display: inline-flex; align-items: center;">
                    <button class="qty-btn qty-decrease" data-addon-id="${e.id}" data-action="decrease" ${n<=1?"disabled":""}>-</button>
                    <input 
                      type="number" 
                      id="addon-qty-${e.id}"
                      class="addon-quantity-input" 
                      data-addon-id="${e.id}"
                      value="${n}"
                      min="1"
                      max="999"
                      style="width: 60px; text-align: center; margin: 0 8px;"
                    >
                    <button class="qty-btn qty-increase" data-addon-id="${e.id}" data-action="increase" ${n>=999?"disabled":""}>+</button>
                  </div>
                </div>
              `:""}
            </div>
          </div>
        </div>
      </div>
    `}renderDiscount(e){var o;const t=((o=this.selectedDiscount)==null?void 0:o.id)===e.id,i=e.type==="percentage"?`${e.value}% off`:`$${e.value} off`;return`
      <div class="discount-card ${t?"selected":""}" data-discount-id="${e.id}">
        <div class="discount-header">
          <span class="discount-name">${e.name}</span>
          <span class="discount-value">${i}</span>
        </div>
        <p class="discount-description">${e.description}</p>
        <span class="discount-code">Code: ${e.code}</span>
      </div>
    `}renderOrderSummary(){if(!this.selectedPlan)return"<p>No plan selected</p>";if(this.isLoadingEstimate)return`
        <div class="loading-summary">
          <div class="spinner"></div>
          <p>Calculating order summary...</p>
        </div>
      `;if(this.estimateError)return`
        <div class="error-summary">
          <p>Unable to calculate order summary</p>
          <small>${this.estimateError}</small>
        </div>
      `;if(!this.orderEstimate)return`
        <div class="loading-summary">
          <p>Loading order summary...</p>
        </div>
      `;const e=this.orderEstimate,t=this.getCurrencySymbol(e.currency||this.selectedPlan.currencyCode);let i="";const o=[],r=[],n=new Map;let l=null;if(e.cart&&e.cart.length>0&&e.cart.forEach(a=>{var p,c;if(!((a.itemType==="Discount"||a.itemType==="Coupon"||(p=a.description)!=null&&p.toLowerCase().includes("coupon")||(c=a.description)!=null&&c.toLowerCase().includes("discount"))&&a.status==="Rejected"))if(a.itemType==="Rate Plan"&&a.status==="Reserved"&&a.nextBillingDate&&(l=this.formatDisplayDate(a.nextBillingDate)),a.itemType==="Discount"&&a.itemId&&a.status!=="Reserved"){n.has(a.itemId)||n.set(a.itemId,{description:a.description,items:[],totalAmount:0});const m=n.get(a.itemId);m.items.push(a),m.totalAmount+=a.amount}else a.status==="Reserved"?r.push(a):o.push(a)}),o.forEach(a=>{var f,v;const d=a.itemType==="Discount"||a.itemType==="Coupon"||((f=a.description)==null?void 0:f.toLowerCase().includes("coupon"))||((v=a.description)==null?void 0:v.toLowerCase().includes("discount"));if(a.itemType==="Discount")return;const p=a.fromDate&&!d?this.formatDisplayDate(a.fromDate):"",c=a.toDate&&!d?this.formatDisplayDate(a.toDate):"",m=p&&c?`${p} - ${c}`:"";i+=`
        <div class="summary-item">
          <div class="item-details">
            <span class="item-name">${a.description}</span>
            ${m?`<span class="item-dates">${m}</span>`:""}
          </div>
          <span class="item-price ${d?"discount-price":""}">
            ${d?"-":""}${t}${a.amount.toFixed(2)}
          </span>
        </div>
      `}),n.forEach((a,d)=>{const p=a.items.length>1;i+=`
        <div class="summary-item discount-group">
          <div class="item-details">
            <span class="item-name">
              ${a.description}
              ${p?`
                <span class="discount-info-icon" data-discount-id="${d}">
                  ⓘ
                  <div class="discount-tooltip">
                    <div class="tooltip-title">Applied on:</div>
                    ${a.items.map(c=>{var f;return`<div class="tooltip-item">- ${((f=c.options)==null?void 0:f.itemType)||"Item"}: ${t}${c.amount.toFixed(2)}</div>`}).join("")}
                  </div>
                </span>
              `:""}
            </span>
          </div>
          <span class="item-price discount-price">
            -${t}${a.totalAmount.toFixed(2)}
          </span>
        </div>
      `}),r.length>0){const a=new Map,d=[];r.forEach(c=>{if(c.itemType==="Discount"&&c.itemId){a.has(c.itemId)||a.set(c.itemId,{description:c.description,items:[],totalAmount:0});const m=a.get(c.itemId);m.items.push(c),m.totalAmount+=c.amount}else d.push(c)});const p=r.reduce((c,m)=>c+m.amount,0);i+=`
        <div class="reserved-items-section">
          ${l?`
            <div class="reserved-billing-date">
              Next Billing Date - <span class="billing-date-value">${l}</span>
            </div>
          `:""}
          
          ${d.map(c=>{var y,D;const m=c.itemType==="Discount"||c.itemType==="Coupon"||((y=c.description)==null?void 0:y.toLowerCase().includes("coupon"))||((D=c.description)==null?void 0:D.toLowerCase().includes("discount")),f=c.fromDate&&!m?this.formatDisplayDate(c.fromDate):"",v=c.toDate&&!m?this.formatDisplayDate(c.toDate):"",k=f&&v?`${f} - ${v}`:"";return`
              <div class="summary-item reserved-item">
                <div class="item-details">
                  <span class="item-name">${c.description}</span>
                  ${k?`<span class="item-dates">${k}</span>`:""}
                </div>
                <span class="item-price ${m?"discount-price":""}">
                  ${m?"-":""}${t}${c.amount.toFixed(2)}
                </span>
              </div>
            `}).join("")}
          
          ${Array.from(a.entries()).map(([c,m])=>{const f=m.items.length>1;return`
              <div class="summary-item reserved-item discount-group">
                <div class="item-details">
                  <span class="item-name">
                    ${m.description}
                    ${f?`
                      <span class="discount-info-icon" data-discount-id="${c}">
                        ⓘ
                        <div class="discount-tooltip">
                          <div class="tooltip-title">Applied on:</div>
                          ${m.items.map(v=>{var y;return`<div class="tooltip-item">- ${((y=v.options)==null?void 0:y.itemType)||"Item"}: ${t}${v.amount.toFixed(2)}</div>`}).join("")}
                        </div>
                      </span>
                    `:""}
                  </span>
                </div>
                <span class="item-price discount-price">
                  -${t}${m.totalAmount.toFixed(2)}
                </span>
              </div>
            `}).join("")}
          
          <div class="reserved-subtotal">
            <span class="subtotal-label">Subtotal</span>
            <span class="subtotal-price">${t}${p.toFixed(2)}</span>
          </div>
        </div>
      `}i+=`
      <div class="summary-divider"></div>
      <div class="summary-subtotal">
        <span class="subtotal-label">Subtotal</span>
        <span class="subtotal-price">${t}${e.subtotal.toFixed(2)}</span>
      </div>
    `,e.discounts&&e.discounts.length>0&&e.discounts.forEach(a=>{i+=`
          <div class="summary-discount">
            <span class="discount-label">${a.name}</span>
            <span class="discount-amount">-${t}${a.amount.toFixed(2)}</span>
          </div>
        `}),e.tax&&e.tax>0&&(i+=`
        <div class="summary-tax">
          <span class="tax-label">Tax</span>
          <span class="tax-amount">${t}${e.tax.toFixed(2)}</span>
        </div>
      `),i+=`
      <div class="summary-divider"></div>
      <div class="summary-total">
        <span class="total-label">Total</span>
        <span class="total-price">${t}${e.total.toFixed(2)}/${this.selectedPlan.period||"month"}</span>
      </div>
    `;const s=e.discounts?e.discounts.reduce((a,d)=>a+d.amount,0):0;return s>0&&(i+=`
        <div class="savings-notice">
          You save ${t}${s.toFixed(2)}!
        </div>
      `),i}getStyles(){return console.log("getStyles theme is:",x(this.theme)),`
      <style>
        ${x(this.theme)}
        
        :host {
          font-family: var(--billhive-font-family, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif);
        }

        .btn {
          display: inline-block;
          font-weight: 400;
          text-align: center;
          white-space: nowrap;
          vertical-align: middle;
          user-select: none;
          border: 1px solid transparent;
          padding: 0.4375rem 1.125rem;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          line-height: 1.5;
          border-radius: var(--billhive-element-border-radius, 4px);
          transition: all 0.15s ease-in-out;
          cursor: pointer;
          text-decoration: none;
          font-family: var(--billhive-font-family);
        }

        .btn-primary {
          color: var(--billhive-header-color, #fff);
          background-color: var(--billhive-accent-color, #6576ff);
          border-color: var(--billhive-accent-color, #6576ff);
        }
		
		    .btn-primary:hover {
          color: var(--billhive-header-color, #fff);
          background-color: var(--billhive-accent-hover, #5664e3);
          border-color: var(--billhive-accent-hover, #5664e3);
          box-shadow: var(--billhive-button-shadow, 0 2px 4px rgba(101, 118, 255, 0.3));
        }

        .btn-primary:focus {
          outline: 0;
          box-shadow: var(--billhive-button-shadow, 0 0 0 0.2rem rgba(101, 118, 255, 0.25));
        }


        .full-page-container {
          background: var(--billhive-highlight-panel-color, white);
          width: 100%;
          min-height: 100vh;
          display: flex;
          flex-direction: column;
          font-family: var(--billhive-font-family);
        }

        .page-header {
          background: var(--billhive-header-color, white);
          border-bottom: 1px solid var(--billhive-border-color, #e0e0e0);
          padding: 1.5rem 2rem;
          position: sticky;
          top: 0;
        }

        .page-header-content {
          display: flex;
          justify-content: space-between;
          align-items: center;
          max-width: 1200px;
          margin: 0 auto;
        }

        .page-header-content h2 {
          margin: 0;
          font-size: 1.75rem;
          font-weight: 600;
          
        }

        .page-content {
          flex: 1;
          padding: 2rem;
          max-width: 1200px;
          margin: 0 auto;
          width: 100%;
          box-sizing: border-box;
          display: flex;
          overflow: hidden;
        }

        .page-body {
          flex: 2;
          padding-right: 1rem;
          overflow-y: auto;
        }

        .page-sidebar {
          flex: 1;
          background: var(--billhive-disabled-color, #f8f9fb);
          border-radius: 8px
          border: 2px solid var(--billhive-border-color, #e7ecf3);
          display: flex;
          flex-direction: column;
          padding-left: 1rem;
        }

        .modal-overlay.visible .modal-container {
          transform: translate(0, 0) scale(1);
        }

        .modal-overlay.fade-in .modal-container {
          transform: translate(0, -30px) scale(0.95);
        }

        .modal-overlay.fade-in.show .modal-container {
          transform: translate(0, 0) scale(1);
        }

        .modal-header {
          padding: 0;
          border-bottom: 1px solid var(--billhive-border-color, #e7ecf3);
          padding: 1rem 1.5rem;
          background: var(--billhive-header-color, #f9fafb);
        }

        .modal-header-content {
          display: flex;
          justify-content: space-between;
          align-items: center;
          margin-bottom: 0.5rem;
        }

        .modal-header h2 {
          font-size: var(--billhive-font-size-heading, 0.8rem);
          font-weight: var(--billhive-header-font-weight, 700);
          color: var(--billhive-text-color, #364a63);
          margin: 0;
          font-family: var(--billhive-font-family);
        }

        .close-btn {
          position: absolute;
          top: 0.75rem;
          right: 0.75rem;
          height: 2.25rem;
          width: 2.25rem;
          display: inline-flex;
          justify-content: center;
          align-items: center;
          color: var(--billhive-sub-text-color, #8094ae);
          z-index: 1;
          transition: all 0.3s;
          background: none;
          border: none;
          border-radius: var(--billhive-element-border-radius, 4px);
          cursor: pointer;
          font-size: 1.25rem;
          font-weight: 700;
          line-height: 1;
          opacity: 0.5;
          padding: 0;
        }

        .close-btn:hover {
          opacity: 0.75;
        }

        /* Progress Stepper Styles */
        .progress-indicator {
          padding: 0.4rem 1.5rem 0.6rem 1.5rem;
        }

        .progress-steps {
          display: flex;
          align-items: center;
          justify-content: center;
          max-width: 500px;
          margin: 0 auto;
        }

        .progress-step {
          display: flex;
          flex-direction: column;
          align-items: center;
          gap: 0.25rem;
          flex: 1;
        }

        .step-icon {
          width: 22px;
          height: 22px;
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          font-weight: 600;
          font-size: 0.7rem;
          background: var(--billhive-input-components-color, #e7ecf3);
          color: var(--billhive-sub-text-color, #8094ae);
          transition: all 0.3s ease;
          font-family: var(--billhive-font-family);
        }

        .progress-step.active .step-icon {
          background: var(--billhive-accent-color, #6576ff);
          color: var(--billhive-header-color, white);
        }

        .progress-step.completed .step-icon {
          background: #10b981;
          color: white;
        }

        .step-label {
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          font-weight: 500;
          color: var(--billhive-sub-text-color, #8094ae);
          text-align: center;
          transition: color 0.3s ease;
          line-height: 1;
          font-family: var(--billhive-font-family);
        }

        .progress-step.active .step-label,
        .progress-step.completed .step-label {
          color: var(--billhive-text-color, #364a63);
        }

        .step-connector {
          flex: 1;
          height: 2px;
          background: var(--billhive-border-color, #e7ecf3);
          margin: 0 0.3rem;
          position: relative;
          top: -11px;
        }

        .progress-step.completed + .step-connector {
          background: #10b981;
        }

        .modal-content {
          display: flex;
          flex: 1;
          overflow: hidden;
        }

        .page-body {
          flex: 2;
          padding: 1rem;
          overflow-y: auto;
          max-height: calc(82vh - 140px);
        }

        .page-sidebar {
          flex: 1;
          background: var(--billhive-disabled-color, #f8f9fb);
          border: 2px solid var(--billhive-border-color, #e7ecf3);
          border-radius: 8px;
          display: flex;
          flex-direction: column;
          max-height: calc(90vh - 140px);
        }

        .plan-section, .addons-section {
          margin-bottom: 1.25rem;
        }

        .plan-section h3, .addons-section h3 {
          font-size: var(--billhive-font-size-sub-heading, 0.7rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          margin: 0 0 0.6rem 0;
          font-family: var(--billhive-font-family);
        }

        .selected-plan {
          display: flex;
          justify-content: space-between;
          align-items: center;
          padding: 0.6rem;
          background: var(--billhive-disabled-color, #f8f9fb);
          border-radius: var(--billhive-element-border-radius, 8px);
          border: 1px solid var(--billhive-border-color, #e7ecf3);
        }

        .plan-info {
          display: flex;
          flex-direction: column;
          align-items: flex-start;
          flex: 1;
        }
        

        .selected-plan.loading {
          flex-direction: column;
          justify-content: center;
          align-items: center;
          gap: 0.5rem;
          min-height: 70px;
        }

        .selected-plan.error {
          flex-direction: column;
          justify-content: center;
          align-items: center;
          gap: 0.75rem;
          background: #fef5f5;
          border-color: #fed7d7;
          color: #c53030;
        }

        .loading-spinner {
          width: 24px;
          height: 24px;
          border: 2px solid var(--billhive-loading-color, #e2e8f0);
          border-top: 2px solid var(--billhive-accent-color, #6576ff);
          border-radius: 50%;
          animation: spin 1s linear infinite;
        }

        @keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }

        .error-icon {
          font-size: 1.5rem;
        }

        .retry-btn {
          padding: 0.5rem 1rem;
          background: var(--billhive-accent-color, #6576ff);
          color: var(--billhive-header-color, white);
          border: none;
          border-radius: var(--billhive-element-border-radius, 4px);
          cursor: pointer;
          font-size: var(--billhive-text-font-size, 0.875rem);
          font-family: var(--billhive-font-family);
          transition: all 0.2s ease;
        }

        .retry-btn:hover {
          background: var(--billhive-accent-hover, #5664e3);
          box-shadow: var(--billhive-button-shadow, 0 2px 4px rgba(101, 118, 255, 0.3));
        }

        .product-name {
          display: block;
          color: #8094ae;
          font-size: 0.75rem;
          margin-top: 0.25rem;
        }

        .trial-info {
          display: flex;
          align-items: center;
          gap: 0.5rem;
          margin-top: 0.25rem;
          width: 100%;
        }

        .trial-badge {
          background: #38a169;
          color: white;
          padding: 0.125rem 0.5rem;
          border-radius: 12px;
          font-size: 0.75rem;
          font-weight: 600;
        }

        .trial-details {
          color: #38a169;
          font-size: 0.875rem;
          font-weight: 500;
        }

        .recommended-badge {
          background: var(--billhive-accent-color, #6576ff);
          color: var(--billhive-header-color, white);
          padding: 0.125rem 0.5rem;
          border-radius: 12px;
          font-size: 0.75rem;
          font-weight: 600;
          margin-left: 0.5rem;
        }

        .plan-header {
          display: flex;
          align-items: center;
          gap: 0.75rem;
        }

        .plan-name {
        font-size: var(--billhive-font-size-body-text, 0.8rem);
        font-weight: var(--billhive-header-font-weight, 600);
        }

        .plan-description {
          color: #8094ae;
          font-size: 0.8rem;
          margin-bottom: 0.6rem;
        }

        .plan-details {
          display: grid;
          gap: 0.5rem;
          margin-bottom: 1rem;
        }

        .detail-item {
          font-size: 0.875rem;
          display: block;
          margin-bottom: 0.25rem;
        }

        .detail-item .label {
          color: #8094ae;
          font-weight: 500;
          min-width: 80px;
        }

        .detail-item .value {
          color: #364a63;
          font-weight: 600;
        }

        .status-active {
          color: #38a169;
        }

        .status-inactive {
          color: #e53e3e;
        }

        .plan-features {
          display: flex;
          flex-direction: column;
          gap: 0.25rem;
          margin-top: 1rem;
        }

        .feature-item {
          font-size: 0.875rem;
          color: #364a63;
        }

        .price-display {
          display: flex;
          align-items: baseline;
          gap: 0.25rem;
        }

        .price {
          font-size: var(--billhive-font-size-heading, 0.8rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          font-family: var(--billhive-font-family);
        }

        .period {
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          color: var(--billhive-sub-text-color, #8094ae);
          font-family: var(--billhive-font-family);
        }

        .billing-info {
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          color: var(--billhive-sub-text-color, #8094ae);
          margin-top: 0.25rem;
          font-family: var(--billhive-font-family);
        }

        .plan-info h4 {
          font-size: var(--billhive-font-size-sub-heading, 0.7rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          margin: 0 0 0.2rem 0;
          font-family: var(--billhive-font-family);
        }

        .plan-info p {
          color: #8094ae;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          margin: 0;
        }

        .plan-price .price {
          font-size: var(--billhive-font-size-body-text, 0.8rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          font-family: var(--billhive-font-family);
        }

        .addons-grid {
          display: grid;
          gap: 1rem;
        }

        .addon-card {
          padding: 0.6rem;
          border: 2px solid #e7ecf3;
          border-radius: var(--billhive-element-border-radius, 8px);
          transition: all 0.2s ease;
          cursor: pointer;
          position: relative;
          background-color: var(--billhive-cards-color, white);
        }

        .addon-card:hover {
          border-color: var(--billhive-accent-color, #526484);
        }

        .addon-card.selected {
          border-color: var(--billhive-accent-color, #526484);
          background: var(--billhive-disabled-color, #f8f9fb);
        }

        .addon-card.recommended {
          border-color: #4CAF50;
        }

        .addon-badge {
          position: absolute;
          top: -10px;
          right: 10px;
          background: #4CAF50;
          color: white;
          padding: 2px 8px;
          border-radius: var(--billhive-element-border-radius, 4px);
          font-size: 11px;
          font-weight: 600;
        }

        .addon-quantity {
          margin: 0;
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          color: var(--billhive-sub-text-color, #8094ae);
          text-align: right;
          font-family: var(--billhive-font-family);
        }

        .addon-quantity-control {
          margin-top: 0.5rem;
          display: flex;
          flex-direction: column;
          align-items: flex-end;
          gap: 0.25rem;
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          color: var(--billhive-text-color, #364a63);
        }

        .quantity-input-group {
          display: flex;
          align-items: center;
          border: 1px solid #e7ecf3;
          border-radius: var(--billhive-element-border-radius, 4px);
          overflow: hidden;
          background: white;
        }

        .qty-btn {
          background: var(--billhive-accent-color, #526484);
          color: white;
          border: none;
          width: 28px;
          height: 28px;
          display: flex;
          align-items: center;
          justify-content: center;
          cursor: pointer;
          transition: background-color 0.2s ease;
          font-size: 14px;
          font-weight: 600;
        }

        .qty-btn:hover {
          background: var(--billhive-accent-color-hover, #455a77);
        }

        .qty-btn:disabled {
          background: #e7ecf3;
          color: #8094ae;
          cursor: not-allowed;
        }

        .addon-quantity-input {
          border: none;
          outline: none;
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          font-family: var(--billhive-font-family);
          color: var(--billhive-text-color, #364a63);
          background: transparent;
        }

        .addon-quantity-input::-webkit-outer-spin-button,
        .addon-quantity-input::-webkit-inner-spin-button {
          -webkit-appearance: none;
          margin: 0;
        }

        .addon-quantity-input[type=number] {
          -moz-appearance: textfield;
        }

        .loading-state, .error-state, .empty-state {
          padding: 20px;
          text-align: center;
          color: #666;
        }

        .error-state {
          color: #f44336;
        }

        .addon-content {
          display: flex;
          align-items: flex-start;
          gap: 1rem;
        }

        .addon-left {
          flex: 1;
        }

        .addon-right {
          display: flex;
          align-items: flex-start;
        }

        .addon-price-section {
          display: flex;
          flex-direction: column;
          align-items: flex-end;
          gap: 0.25rem;
        }

        .addon-label {
          display: flex;
          align-items: flex-start;
          gap: 0.5rem;
          cursor: pointer;
        }

        .addon-info {
          flex: 1;
          text-align: left;
        }

        .addon-name {
          font-weight: 500;
          color: #364a63;
          display: block;
          margin-bottom: 0.25rem;
          text-align: left;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
        }

        .addon-checkbox {
          width: 16px;
          height: 16px;
          accent-color: var(--billhive-accent-color, #526484);
          margin-top: 2px;
        }

        .addon-price {
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-family: var(--billhive-font-family);
        }

        .addon-description {
          color: #8094ae;
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          margin: 0;
          text-align: left;
        }

        .order-summary {
          display: flex;
          flex-direction: column;
          height: 100%;
        }

        .order-summary-content {
          flex: 1;
          padding: 1.25rem;
          overflow-y: auto;
        }

        .order-summary h3 {
          font-size: var(--billhive-font-size-sub-heading, 0.7rem);
          font-weight: 600;
          color: #364a63;
          margin: 0 0 0.6rem 0;
        }

        .sidebar-footer {
          padding: 1rem 1.25rem 1.25rem 1.25rem;
          border-top: 1px solid #e7ecf3;
          background: #f8f9fb;
          margin-top: auto;
        }

        .loading-summary, .error-summary {
          padding: 1.5rem;
          text-align: center;
          color: var(--billhive-sub-text-color, #64748b);
        }

        .loading-summary .spinner {
          width: 24px;
          height: 24px;
          border: 2px solid #e7ecf3;
          border-top-color: var(--billhive-primary-color, #F15A29);
          border-radius: 50%;
          margin: 0 auto 0.5rem;
          animation: spin 0.8s linear infinite;
        }

        .error-summary {
          color: #dc2626;
        }

        .error-summary small {
          display: block;
          margin-top: 0.5rem;
          font-size: 0.75rem;
          opacity: 0.8;
        }

        .summary-item {
          display: flex;
          justify-content: space-between;
          align-items: flex-start;
          padding: 0.5rem 0;
          border-bottom: 1px solid #e7ecf3;
        }

        .item-details {
          display: flex;
          flex-direction: column;
          gap: 0.25rem;
          flex: 1;
          text-align: left;
        }

        .item-name {
          color: #364a63;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-weight: 500;
          text-align: left;
          margin: 0;
          padding: 0;
        }

        .item-dates {
          color: var(--billhive-sub-text-color, #8094ae);
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          font-style: italic;
          text-align: left;
          margin: 0;
          padding: 0;
        }

        .item-price {
          font-weight: 600;
          color: #364a63;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          margin-left: 1rem;
          white-space: nowrap;
        }

        .item-price.discount-price {
          color: #10b981;
        }

        .reserved-items-section {
          background: #fef2f2;
          border-radius: var(--billhive-element-border-radius, 6px);
          margin: 1rem 0;
          padding: 0.65rem;
        }

        .reserved-billing-date {
          color: #dc2626;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          margin-bottom: 0.75rem;
          text-align: left;
          padding-bottom: 0.5rem;
        }

        .reserved-billing-date .billing-date-value {
          color: #364a63;
        }

        .reserved-item {
          margin-bottom: 0.5rem;
        }

        .reserved-item:last-of-type {
          margin-bottom: 0.5rem;
        }

        .reserved-subtotal {
          display: flex;
          justify-content: space-between;
          align-items: center;
          padding-top: 0.5rem;
          margin-top: 0.5rem;
        }

        .reserved-subtotal .subtotal-label {
          color: #dc2626;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
        }

        .reserved-subtotal .subtotal-price {
          color: #dc2626;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
        }

        .reserved-items-section .item-price {
          font-weight: normal;
        }

        .summary-divider {
          height: 1px;
          background: #e7ecf3;
          margin: 0.6rem 0;
        }

        .summary-total {
          display: flex;
          justify-content: space-between;
          align-items: center;
          font-size: var(--billhive-font-size-sub-heading, 0.7rem);
          font-weight: 700;
          color: #364a63;
          padding: 0.4rem 0;
        }

        .proceed-btn {
          width: 100%;
          background: var(--billhive-accent-color, #526484);
          color: var(--billhive-header-color, white);
          border: 2px solid var(--billhive-accent-color, #526484);
          padding: 0.5rem 1.25rem;
          border-radius: var(--billhive-element-border-radius, 8px);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-weight: 600;
          cursor: pointer;
          transition: all 0.2s ease;
          display: flex;
          align-items: center;
          justify-content: center;
          gap: 0.4rem;
          margin: 0;
          font-family: var(--billhive-font-family);
        }

        .proceed-btn:hover:not(:disabled) {
          background: var(--billhive-accent-hover, #455670);
          border-color: var(--billhive-accent-hover, #455670);
          transform: translateY(-1px);
          box-shadow: var(--billhive-button-shadow, 0 4px 12px rgba(82, 100, 132, 0.3));
        }

        .proceed-btn:disabled {
          background: #e0e0e0;
          border-color: #e0e0e0;
          color: #999;
          cursor: not-allowed;
          opacity: 0.6;
        }

        .proceed-btn:disabled:hover {
          transform: none;
          box-shadow: none;
        }

        /* Available Discounts in Sidebar */
        .available-discounts-section {
          border-top: 1px solid #e7ecf3;
          padding-top: 1rem;
          margin-top: 1rem;
        }

        .available-discounts-section h4 {
          font-size: var(--billhive-font-size-sub-heading, 0.7rem);
          font-weight: 600;
          color: #364a63;
          margin: 0 0 0.5rem 0;
        }

        .available-discounts-grid {
          display: grid;
          gap: 0.5rem;
        }

        .available-discount-card {
          padding: 0.5rem;
          border: 1px solid #e7ecf3;
          border-radius: var(--billhive-element-border-radius, 6px);
          transition: all 0.2s ease;
          cursor: pointer;
          background: white;
          background-color: var(--billhive-cards-color, white);
        }

        .available-discount-card:hover {
          border-color: var(--billhive-accent-color, #526484);
          background: var(--billhive-disabled-color, #f8f9fb);
        }

        .available-discount-card.selected {
          border-color: var(--billhive-accent-color, #526484);
          background: var(--billhive-accent-light, #f0f7ff);
        }

        .available-discount-card.applied {
          border-color: #10b981;
          background: #f0fdf4;
        }

        .discount-applied-badge {
          display: inline-block;
          color: #10b981;
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          font-weight: 600;
          margin-top: 0.25rem;
        }

        .available-discount-card .remove-discount-btn {
          background: transparent;
          color: #dc2626;
          border: none;
          width: 24px;
          height: 24px;
          display: flex;
          align-items: center;
          justify-content: center;
          cursor: pointer;
          font-size: 24px;
          font-weight: bold;
          transition: color 0.2s;
          padding: 0;
          line-height: 1;
        }

        .available-discount-card .remove-discount-btn:hover {
          color: #b91c1c;
        }

        .available-discount-header {
          display: flex;
          justify-content: space-between;
          align-items: center;
          margin-bottom: 0.25rem;
        }

        .available-discount-name {
          font-weight: 600;
          color: #364a63;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
        }

        .available-discount-value {
          font-weight: 600;
          color: var(--billhive-text-color, #364a63);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
        }

        .available-discount-description {
          color: #8094ae;
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          margin: 0 0 0.25rem 0;
          line-height: 1.3;
        }

        .available-discount-code {
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          color: var(--billhive-text-color, #364a63);
          background: var(--billhive-input-components-color, #e7ecf3);
          padding: 0.2rem 0.4rem;
          border-radius: var(--billhive-element-border-radius, 3px);
          font-weight: 500;
          font-family: var(--billhive-font-family);
        }

        /* Loading and error states for offers */
        .loading-offers {
          display: flex;
          align-items: center;
          gap: 0.5rem;
          padding: 1rem;
          text-align: center;
          color: var(--billhive-sub-text-color, #8094ae);
          font-size: var(--billhive-font-size-sub-text, 0.8rem);
        }

        .loading-offers .spinner {
          width: 16px;
          height: 16px;
          border: 2px solid var(--billhive-disabled-color, #e7ecf3);
          border-top: 2px solid var(--billhive-accent-color, #526484);
          border-radius: 50%;
          animation: spin 1s linear infinite;
        }

        @keyframes spin {
          0% { transform: rotate(0deg); }
          100% { transform: rotate(360deg); }
        }

        .offers-error {
          padding: 1rem;
          text-align: center;
          color: var(--billhive-error-color, #dc2626);
          font-size: var(--billhive-font-size-sub-text, 0.8rem);
        }

        .offers-error p {
          margin: 0;
        }

        .no-offers {
          padding: 1rem;
          text-align: center;
          color: var(--billhive-sub-text-color, #8094ae);
          font-size: var(--billhive-font-size-sub-text, 0.8rem);
          margin: 0;
          font-style: italic;
        }

        /* Coupon styles */
        .coupon-section {
          border-top: 1px solid #e7ecf3;
          padding-top: 1rem;
          margin-top: 1rem;
        }

        .coupon-section h4 {
          font-size: var(--billhive-font-size-sub-heading, 0.7rem);
          font-weight: 600;
          color: #364a63;
          margin: 0 0 0.5rem 0;
        }

        .coupon-input-group {
          display: flex;
          gap: 0.5rem;
          margin-bottom: 0.5rem;
        }

        .coupon-input-group input {
          flex: 1;
          padding: 0.4rem;
          border: 1px solid var(--billhive-border-color, #e7ecf3);
          border-radius: var(--billhive-element-border-radius, 4px);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-family: var(--billhive-font-family);
        }

        .coupon-input-group input:focus {
          outline: none;
          border-color: var(--billhive-accent-color, #526484);
        }

        .apply-coupon-btn {
          padding: 0.4rem 0.8rem;
          background: var(--billhive-accent-color, #526484);
          color: var(--billhive-header-color, white);
          border: none;
          border-radius: var(--billhive-element-border-radius, 4px);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-weight: 500;
          cursor: pointer;
          transition: background 0.2s ease;
          font-family: var(--billhive-font-family);
        }

        .apply-coupon-btn:hover {
          background: var(--billhive-accent-hover, #455670);
        }

        .coupon-message {
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          padding: 0.5rem;
          border-radius: var(--billhive-element-border-radius, 4px);
          margin-bottom: 0.5rem;
        }

        .coupon-message.success {
          background: #d4edda;
          color: #155724;
          border: 1px solid #c3e6cb;
        }

        /* Order Confirmation Styles */
        .confirmation-container {
          max-width: 600px;
          margin: 0 auto;
        }

        .confirmation-success {
          text-align: center;
          margin-bottom: 2rem;
        }

        .success-icon-large {
          display: inline-flex;
          margin-bottom: 1rem;
        }

        .confirmation-success h2 {
          font-size: var(--billhive-font-size-heading, 0.8rem);
          font-weight: 700;
          color: #10b981;
          margin: 0 0 0.4rem 0;
        }

        .confirmation-message {
          color: #8094ae;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          margin: 0;
        }

        .confirmation-details {
          background: #f8f9fb;
          border-radius: var(--billhive-element-border-radius, 8px);
          padding: 1rem;
        }

        .confirmation-details h3 {
          font-size: var(--billhive-font-size-sub-heading, 0.7rem);
          font-weight: 600;
          color: #364a63;
          margin: 0 0 0.8rem 0;
        }

        .detail-section {
          margin-bottom: 0.8rem;
          padding-bottom: 0.8rem;
          border-bottom: 1px solid #e7ecf3;
        }

        .detail-section:last-of-type {
          border-bottom: none;
          margin-bottom: 0;
          padding-bottom: 0;
        }

        .detail-section h4 {
          font-size: 0.8rem;
          font-weight: 600;
          color: #8094ae;
          text-transform: uppercase;
          letter-spacing: 0.5px;
          margin: 0 0 0.5rem 0;
        }

        .detail-row {
          display: flex;
          justify-content: space-between;
          align-items: center;
          padding: 0.3rem 0;
        }

        .detail-label {
          color: #8094ae;
          font-size: 0.8rem;
        }

        .detail-value {
          color: #364a63;
          font-weight: 600;
          font-size: 0.8rem;
        }

        .discount-row .detail-value {
          color: #10b981;
        }

        .total-row {
          border-top: 2px solid #e7ecf3;
          margin-top: 0.5rem;
          padding-top: 1rem;
        }

        .total-row .detail-label,
        .total-row .detail-value {
          font-size: 0.95rem;
          font-weight: 700;
        }

        .confirmation-note {
          background: #f0fdf4;
          border: 1px solid #10b981;
          border-radius: var(--billhive-element-border-radius, 6px);
          padding: 0.7rem;
          margin-top: 1rem;
        }

        .confirmation-note p {
          color: var(--billhive-text-color, #364a63);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          margin: 0.3rem 0;
          font-family: var(--billhive-font-family);
        }

        .confirmation-note p:first-child {
          margin-top: 0;
        }

        .confirmation-note p:last-child {
          margin-bottom: 0;
        }

        .confirmation-actions h3 {
          font-size: var(--billhive-font-size-sub-heading, 0.7rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          margin: 0 0 0.8rem 0;
          font-family: var(--billhive-font-family);
        }

        .next-steps {
          display: flex;
          flex-direction: column;
          gap: 1rem;
        }

        .next-step {
          display: flex;
          align-items: center;
          gap: 0.6rem;
        }

        .step-number {
          width: 26px;
          height: 26px;
          background: var(--billhive-input-components-color, #e7ecf3);
          color: var(--billhive-text-color, #364a63);
          border-radius: 50%;
          display: flex;
          align-items: center;
          justify-content: center;
          font-weight: var(--billhive-header-font-weight, 600);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          flex-shrink: 0;
          font-family: var(--billhive-font-family);
        }

        .step-text {
          color: var(--billhive-text-color, #364a63);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          line-height: 1.3;
          font-family: var(--billhive-font-family);
        }

        .close-confirmation-btn {
          width: 100%;
          background: var(--billhive-input-components-color, #e7ecf3);
          color: var(--billhive-text-color, #364a63);
          border: none;
          padding: 0.5rem 1.25rem;
          border-radius: var(--billhive-element-border-radius, 8px);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-weight: var(--billhive-header-font-weight, 600);
          cursor: pointer;
          margin-top: 0.5rem;
          transition: all 0.2s ease;
          font-family: var(--billhive-font-family);
        }

        .close-confirmation-btn:hover {
          background: var(--billhive-border-color, #d4dae6);
        }

        .coupon-message.error {
          background: #f8d7da;
          color: #721c24;
          border: 1px solid #f5c6cb;
        }

        .applied-coupon {
          display: flex;
          justify-content: space-between;
          align-items: center;
          background: #d4edda;
          padding: 0.5rem;
          border-radius: var(--billhive-element-border-radius, 4px);
          border: 1px solid #c3e6cb;
        }

        .coupon-error {
          background: #fef2f2;
          border: 1px solid #fecaca;
          color: #dc2626;
          padding: 0.5rem;
          border-radius: var(--billhive-element-border-radius, 4px);
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          margin-top: 0.5rem;
        }

        .coupon-name {
          color: #155724;
          font-weight: 500;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-family: var(--billhive-font-family);
        }

        .remove-coupon-btn {
          background: none;
          border: none;
          color: #155724;
          font-size: 1rem;
          font-weight: bold;
          cursor: pointer;
          padding: 0;
          width: 20px;
          height: 20px;
          display: flex;
          align-items: center;
          justify-content: center;
        }

        .remove-coupon-btn:hover {
          background: rgba(21, 87, 36, 0.1);
          border-radius: 50%;
        }

        /* Updated summary styles */
        .summary-subtotal {
          display: flex;
          justify-content: space-between;
          align-items: center;
          padding: 0.3rem 0;
          color: var(--billhive-sub-text-color, #8094ae);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-family: var(--billhive-font-family);
        }

        .summary-discount {
          display: flex;
          justify-content: space-between;
          align-items: center;
          padding: 0.3rem 0;
          color: #10b981;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-family: var(--billhive-font-family);
        }

        .summary-tax {
          display: flex;
          justify-content: space-between;
          align-items: center;
          padding: 0.3rem 0;
          color: var(--billhive-sub-text-color, #8094ae);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-family: var(--billhive-font-family);
        }

        .discount-amount {
          font-weight: 600;
        }

        .savings-notice {
          text-align: center;
          color: #10b981;
          font-weight: var(--billhive-header-font-weight, 600);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          padding: 0.5rem;
          background: #f0fdf4;
          border-radius: var(--billhive-element-border-radius, 4px);
          margin-top: 0.5rem;
          font-family: var(--billhive-font-family);
        }

        .discount-group .item-name {
          display: flex;
          align-items: center;
          gap: 0.25rem;
        }

        .discount-info-icon {
          position: relative;
          display: inline-flex;
          align-items: center;
          justify-content: center;
          width: 16px;
          height: 16px;
          background: var(--billhive-input-components-color, #e7ecf3);
          color: var(--billhive-text-color, #364a63);
          border-radius: 50%;
          font-size: 10px;
          font-weight: bold;
          cursor: help;
          transition: all 0.2s ease;
        }

        .discount-info-icon:hover {
          background: var(--billhive-primary-color, #2563eb);
          color: white;
        }

        .discount-tooltip {
          position: absolute;
          bottom: 100%;
          left: 50%;
          transform: translateX(-50%);
          background: white;
          border: 1px solid var(--billhive-border-color, #d4dae6);
          border-radius: var(--billhive-element-border-radius, 4px);
          padding: 0.5rem;
          min-width: 200px;
          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
          z-index: 1000;
          display: none;
          margin-bottom: 0.25rem;
        }

        .discount-info-icon:hover .discount-tooltip {
          display: block;
        }

        .discount-tooltip::after {
          content: '';
          position: absolute;
          top: 100%;
          left: 50%;
          transform: translateX(-50%);
          border: 6px solid transparent;
          border-top-color: white;
        }

        .discount-tooltip::before {
          content: '';
          position: absolute;
          top: 100%;
          left: 50%;
          transform: translateX(-50%);
          border: 7px solid transparent;
          border-top-color: var(--billhive-border-color, #d4dae6);
          margin-top: -1px;
        }

        .tooltip-title {
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          margin-bottom: 0.25rem;
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
        }

        .tooltip-item {
          color: var(--billhive-sub-text-color, #8094ae);
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          padding: 0.125rem 0;
        }

        @media (max-width: 768px) {
          .modal-container {
            margin: 1rem;
            min-height: 500px;
            max-height: calc(100vh - 2rem);
          }

          .modal-content {
            flex-direction: column;
          }

          .page-sidebar {
            border-left: none;
            border-top: 1px solid #e7ecf3;
          }

          .page-body {
            padding: 1.5rem;
          }
          
          .order-summary-content {
            padding: 1.5rem;
          }
          
          .sidebar-footer {
            padding: 1rem 1.5rem 1.5rem 1.5rem;
          }

          .selected-plan {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
          }

          .coupon-input-group {
            flex-direction: column;
          }

          .apply-coupon-btn {
            width: 100%;
          }
        }

        /* Personal Details Form Styles */
        .personal-details-form {
          max-width: 600px;
          text-align: left !important; /* Override any external text-center */
        }
        
        /* Prevent external pricing styles from affecting this form */
        .personal-details-form.pricing,
        .personal-details-form.text-center {
          text-align: left !important;
        }

        .personal-details-form h3 {
          font-size: var(--billhive-font-size-sub-heading, 0.7rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          margin: 0 0 0.6rem 0;
          padding-bottom: 0.3rem;
          border-bottom: 1px solid var(--billhive-border-color, #e7ecf3);
          font-family: var(--billhive-font-family);
        }

        .form-grid {
          display: grid;
          grid-template-columns: 1fr 1fr;
          gap: 1rem;
          margin-bottom: 1.5rem;
        }

        .form-group {
          display: flex;
          flex-direction: column;
        }

        .form-group.full-width {
          grid-column: 1 / -1;
        }

        .form-group label {
          font-weight: 500;
          color: var(--billhive-text-color, #364a63);
          margin-bottom: 0.3rem;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-family: var(--billhive-font-family);
        }

        .form-group input,
        .form-group select {
          padding: 0.5rem;
          border: 2px solid var(--billhive-border-color, #e7ecf3);
          border-radius: var(--billhive-element-border-radius, 6px);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          transition: border-color 0.2s ease;
          font-family: var(--billhive-font-family);
          background: var(--billhive-input-components-color, #f8f9fb);
        }

        .form-group input:focus,
        .form-group select:focus {
          outline: none;
          border-color: var(--billhive-accent-color, #526484);
        }

        .form-group input.error,
        .form-group select.error {
          border-color: var(--billhive-error-color, #e85347);
        }

        .field-error {
          color: var(--billhive-error-color, #e85347);
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          margin-top: 0.25rem;
          display: none;
          font-family: var(--billhive-font-family);
        }

        .form-actions {
          display: flex;
          gap: 1rem;
        }

        .back-btn {
          min-width: 100px;
          padding: 0.5rem 1.25rem;
          background: var(--billhive-cards-color, #ffffff);
          color: var(--billhive-text-color, #364a63);
          border: 2px solid var(--billhive-border-color, #e7ecf3);
          border-radius: var(--billhive-element-border-radius, 8px);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-weight: 600;
          cursor: pointer;
          transition: all 0.2s ease;
          display: flex;
          align-items: center;
          justify-content: center;
          gap: 0.4rem;
          font-family: var(--billhive-font-family);
        }

        .back-btn:hover {
          background: var(--billhive-disabled-color, #f8f9fb);
          border-color: var(--billhive-accent-color, #526484);
          color: var(--billhive-accent-color, #526484);
          transform: translateY(-1px);
        }

        .sidebar-footer .proceed-btn {
          flex: 1;
          min-width: 180px;
        }

        .proceed-btn:hover:not(:disabled) {
          background: var(--billhive-accent-hover, #455670);
          border-color: var(--billhive-accent-hover, #455670);
          transform: translateY(-1px);
          box-shadow: var(--billhive-button-shadow, 0 4px 12px rgba(82, 100, 132, 0.3));
        }

        .proceed-btn:disabled {
          background: #e0e0e0;
          border-color: #e0e0e0;
          color: #999;
          cursor: not-allowed;
          opacity: 0.6;
        }

        .proceed-btn:disabled:hover {
          transform: none;
          box-shadow: none;
        }

        @media (max-width: 768px) {
          .modal-container {
            margin: 1rem;
            min-height: 500px;
            max-height: calc(100vh - 2rem);
          }

          .modal-content {
            flex-direction: column;
          }

          .page-sidebar {
            border-left: none;
            border-top: 1px solid #e7ecf3;
          }

        
          .page-body {
            padding: 1.5rem;
          }
          
          .order-summary-content {
            padding: 1.5rem;
          }
          
          .sidebar-footer {
            padding: 1rem 1.5rem 1.5rem 1.5rem;
          }

          .selected-plan {
            flex-direction: column;
            align-items: flex-start;
            gap: 0.5rem;
          }

          .coupon-input-group {
            flex-direction: column;
          }

          .apply-coupon-btn {
            width: 100%;
          }

          .form-grid {
            grid-template-columns: 1fr;
          }

          .form-actions {
            flex-direction: column-reverse;
            gap: 0.75rem;
          }

          .back-btn,
          .proceed-btn {
            width: 100%;
            min-width: unset;
            justify-content: center;
          }

          .proceed-btn {
            flex: none;
          }
        }

        /* Payment Method Styles */
        .payment-methods-section {
          max-width: 600px;
        }

        .payment-methods-section h3 {
          font-size: var(--billhive-font-size-sub-heading, 0.7rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          margin: 0 0 1rem 0;
          padding-bottom: 0.5rem;
          border-bottom: 1px solid var(--billhive-border-color, #e7ecf3);
          font-family: var(--billhive-font-family);
        }

        .payment-methods-grid {
          display: grid;
          grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
          gap: 0.75rem;
          margin-bottom: 1rem;
        }

        .payment-method-card {
          padding: 0.5rem;
          border: 2px solid var(--billhive-border-color, #e7ecf3);
          border-radius: var(--billhive-element-border-radius, 6px);
          cursor: pointer;
          transition: all 0.2s ease;
          text-align: center;
          background: var(--billhive-cards-color, #ffffff);
          position: relative;
          user-select: none;
          min-height: 90px;
        }

        .payment-method-card:hover {
          border-color: var(--billhive-accent-color, #526484);
          background: var(--billhive-disabled-color, #f8f9fb);
        }

        .payment-method-card.selected {
          border-color: var(--billhive-accent-color, #526484);
          background: var(--billhive-disabled-color, #f8f9fb);
        }

        .payment-method-icon {
          font-size: 2rem;
          margin-bottom: 0.5rem;
          display: block;
        }

        .payment-method-name {
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-family: var(--billhive-font-family);
        }

        .payment-form {
          background: #f8f9fb;
          padding: 1.5rem;
          border-radius: var(--billhive-element-border-radius, 8px);
          border: 1px solid #e7ecf3;
          margin-top: 1rem;
        }

        .payment-form .form-group label {
          text-align: left !important;
          display: block;
        }

        .payment-form .form-grid {
          display: grid;
          grid-template-columns: 1fr 1fr;
          gap: 1rem;
        }

        .cashfree-input-container {
          min-height: 44px;
          background: var(--billhive-surface, #fff);
          border-radius: var(--billhive-element-border-radius, 6px);
          position: relative;
        }

        .cashfree-input-container iframe {
          width: 100% !important;
          height: 44px !important;
        }

        .cashfree-loading {
          text-align: center;
          padding: 20px;
          color: var(--billhive-text-secondary, #666);
        }

        .cashfree-loading p {
          margin: 0;
          font-size: var(--billhive-font-size-body-text, 0.9375rem);
        }

        .wallet-options {
          margin-bottom: 1rem;
        }

        .wallet-section-label {
          display: block;
          font-weight: 500;
          color: var(--billhive-text-color, #364a63);
          margin-bottom: 0.75rem;
          font-size: var(--billhive-font-size-body-text, 0.9375rem);
          font-family: var(--billhive-font-family);
          text-align: left !important;
        }

        .wallet-providers {
          display: grid;
          grid-template-columns: 1fr;
          gap: 0.75rem;
        }

        .wallet-provider-container {
          position: relative;
        }

        .cashfree-wallet-container {
          min-height: 48px;
          background: var(--billhive-surface, #fff);
          border-radius: var(--billhive-element-border-radius, 4px);
          position: relative;
        }

        .cashfree-wallet-container iframe {
          width: 100% !important;
          min-height: 48px !important;
        }

        .wallet-note {
          background: var(--billhive-input-components-color, #f9fafb);
          padding: 0.75rem;
          border-radius: var(--billhive-element-border-radius, 4px);
          border-left: 4px solid var(--billhive-accent-color, #5b5bd6);
          font-size: var(--billhive-font-size-sub-text, 0.875rem);
          color: var(--billhive-sub-text-color, #6b7280);
          margin-top: 1rem;
        }

        .upi-note,
        .netbanking-note {
          background: var(--billhive-accent-light, #e8f4fd);
          padding: 0.75rem;
          border-radius: var(--billhive-element-border-radius, 6px);
          border-left: 4px solid var(--billhive-accent-color, #526484);
          margin-top: 1rem;
        }

        .upi-note p,
        .netbanking-note p {
          margin: 0;
          color: var(--billhive-text-color, #364a63);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          line-height: 1.4;
          font-family: var(--billhive-font-family);
        }

        @media (max-width: 768px) {
          .payment-methods-grid {
            grid-template-columns: repeat(2, 1fr);
          }

          .payment-method-card {
            padding: 0.5rem;
          }

          .payment-method-icon {
            font-size: 1.5rem;
          }

          .payment-form .form-grid {
            grid-template-columns: 1fr;
          }
        }

        /* Payment Form Section Styles */
        .payment-form-section {
          max-width: 600px;
        }

        .selected-method-header {
          display: flex;
          align-items: center;
          justify-content: space-between;
          margin-bottom: 1.5rem;
          padding-bottom: 1rem;
          border-bottom: 1px solid #e7ecf3;
        }

        .change-method-btn {
          display: flex;
          align-items: center;
          gap: 0.5rem;
          background: var(--billhive-cards-color, #ffffff);
          color: var(--billhive-text-color, #364a63);
          border: 2px solid var(--billhive-border-color, #e7ecf3);
          padding: 0.4rem 1rem;
          border-radius: var(--billhive-element-border-radius, 6px);
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-weight: 500;
          cursor: pointer;
          transition: all 0.2s ease;
        }

        .change-method-btn:hover {
          background: var(--billhive-disabled-color, #f8f9fb);
          border-color: var(--billhive-accent-color, #526484);
          color: var(--billhive-accent-hover, #455670);
        }

        .selected-method-header h3 {
          margin: 0;
          font-size: var(--billhive-font-size-sub-heading, 0.7rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          font-family: var(--billhive-font-family);
        }

        @media (max-width: 768px) {
          .selected-method-header {
            flex-direction: column;
            align-items: flex-start;
            gap: 1rem;
          }

          .change-method-btn {
            order: 2;
            align-self: flex-end;
          }

          /* Mobile stepper styles */
          .progress-steps {
            max-width: 100%;
          }

          .step-label {
            font-size: 0.6rem;
            line-height: 1.1;
          }

          .step-icon {
            width: 24px;
            height: 24px;
            font-size: 0.7rem;
          }

          .step-connector {
            margin: 0 0.2rem;
            top: -12px;
          }
        }
        
        .payment-method-card .payment-icon {
          margin-bottom: 0.25rem;
        }
        
        .payment-method-card h4 {
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          font-weight: var(--billhive-header-font-weight, 600);
          color: var(--billhive-text-color, #364a63);
          margin: 0 0 0.2rem 0;
          font-family: var(--billhive-font-family);
        }
        
        .payment-method-card p {
          font-size: var(--billhive-font-size-sub-text, 0.55rem);
          color: var(--billhive-sub-text-color, #8094ae);
          margin: 0;
          line-height: 1.2;
          font-family: var(--billhive-font-family);
        }
      </style>
    `}}customElements.define("bh-checkout",P),typeof module<"u"&&module.exports&&(module.exports=P);class $ extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.selectedPlan=null,this.planId=null,this.theme=b,this.themeData=null}static get observedAttributes(){return["data-plan","data-plan-id","data-theme"]}connectedCallback(){this.loadData(),this.render()}attributeChangedCallback(e,t,i){t!==i&&(e==="data-plan"?this.loadPlan():e==="data-plan-id"?this.planId=i:e==="data-theme"&&this.loadTheme(),this.render())}loadData(){this.planId=this.getAttribute("data-plan-id"),this.loadPlan(),this.loadTheme()}loadTheme(){var t,i,o,r;if(this.theme=JSON.parse(JSON.stringify(b)),(i=(t=this.theme.theme)==null?void 0:t.colors)!=null&&i.accent){const n=g(this.theme.theme.colors.accent);this.theme.theme.colors={...this.theme.theme.colors,...n.theme.colors},this.theme.theme.shadows={...this.theme.theme.shadows,...n.theme.shadows}}const e=this.getAttribute("data-theme");if(e)try{const n=JSON.parse(e),l=C(n);if(l.isValid){if(this.theme=w(n),(r=(o=n.theme)==null?void 0:o.colors)!=null&&r.accent){const s=g(n.theme.colors.accent);this.theme.theme.colors={...this.theme.theme.colors,...s.theme.colors},this.theme.theme.shadows={...this.theme.theme.shadows,...s.theme.shadows}}console.log("PlanSelector custom theme applied:",this.theme)}else console.warn("Invalid theme configuration:",l.errors)}catch(n){console.warn("Invalid JSON in data-theme attribute:",n)}}loadPlan(){const e=this.getAttribute("data-plan");if(e)try{this.selectedPlan=JSON.parse(e)}catch{this.selectedPlan=null}else this.selectedPlan={id:"professional",name:"Professional",description:"Perfect for growing businesses",price:49,period:"month",features:["Unlimited invoices","Up to 10 team members","Advanced analytics","Priority support","API access"]}}async fetchThemeFromAPI(){try{const e=`${u.baseUrl}/cf190aae-cf47-44b0-9e11-6aa6f26bc403/themes/Checkout`,t=await fetch(e,{method:"GET",headers:{"Content-Type":"application/json","x-api-key":u.apiKey}});if(!t.ok)throw new Error(`Failed to fetch theme: ${t.status}`);const i=await t.json();return console.log("Theme data fetched from API:",i),i}catch(e){return console.error("Error fetching theme from API:",e),JSON.parse(JSON.stringify(this.theme))}}async handleSelectPlan(){console.log("Plan selected:",this.selectedPlan);try{const e=await this.fetchThemeFromAPI(),t=(e==null?void 0:e.layout)||"in-app";t==="in-app"?this.createInAppCheckout(e):t==="full-page"&&this.redirectToFullPage(e)}catch(e){console.error("Error handling plan selection:",e),this.createInAppCheckout(JSON.parse(JSON.stringify(this.theme)))}}createInAppCheckout(e){const t=document.createElement("div");t.id="checkout-modal",t.style.cssText=`
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.5);
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 1000;
    `;const i=document.createElement("div");i.style.cssText=`
      background: white;
      border-radius: 8px;
      max-width: 1000px;
      width: 95%;
      max-height: 90vh;
      overflow: hidden;
      position: relative;
    `;const o=document.createElement("button");o.innerHTML="×",o.style.cssText=`
      position: absolute;
      top: 15px;
      right: 20px;
      background: none;
      border: none;
      font-size: 28px;
      cursor: pointer;
      color: #666;
      z-index: 1001;
      width: 40px;
      height: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 50%;
      transition: background-color 0.2s;
    `,o.addEventListener("mouseenter",()=>{o.style.backgroundColor="#f0f0f0"}),o.addEventListener("mouseleave",()=>{o.style.backgroundColor="transparent"});const r=document.createElement("bh-checkout");this.selectedPlan&&r.setAttribute("data-plan",JSON.stringify(this.selectedPlan)),this.planId&&r.setAttribute("data-plan-id",this.planId),e&&r.setAttribute("data-theme",JSON.stringify(e.theme));const n=()=>{t.remove()};o.addEventListener("click",n),t.addEventListener("click",l=>{l.target===t&&n()}),r.addEventListener("checkout-closed",n),i.appendChild(o),i.appendChild(r),t.appendChild(i),document.body.appendChild(t),console.log("Created modal with full PlanSelector component, theme:",e)}redirectToFullPage(e){const t=encodeURIComponent(JSON.stringify(e)),i=encodeURIComponent(JSON.stringify({plan:this.selectedPlan,planId:this.planId})),o=`https://google.com/?theme=${t}&plan=${i}`;console.log("Redirecting to full-page checkout:",o),window.location.href=o}render(){this.shadowRoot.innerHTML=`
      ${this.getStyles()}
      <button class="btn btn-primary" id="openModalBtn">
        Select Plan
      </button>
    `,this.setupEventListeners()}setupEventListeners(){const e=this.shadowRoot.getElementById("openModalBtn");e&&e.addEventListener("click",()=>this.handleSelectPlan())}getStyles(){return`
      <style>
        ${x(this.theme)}

        :host {
          font-family: var(--billhive-font-family, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif);
          display: inline-block;
        }

        .btn {
          display: inline-block;
          font-weight: 400;
          text-align: center;
          white-space: nowrap;
          vertical-align: middle;
          user-select: none;
          border: 1px solid transparent;
          padding: 0.4375rem 1.125rem;
          font-size: var(--billhive-font-size-body-text, 0.65rem);
          line-height: 1.5;
          border-radius: var(--billhive-element-border-radius, 4px);
          transition: all 0.15s ease-in-out;
          cursor: pointer;
          text-decoration: none;
          font-family: var(--billhive-font-family);
        }

        .btn-primary {
          color: var(--billhive-header-color, #fff);
          background-color: var(--billhive-accent-color, #6576ff);
          border-color: var(--billhive-accent-color, #6576ff);
        }

        .btn-primary:hover {
          color: var(--billhive-header-color, #fff);
          background-color: var(--billhive-accent-hover, #5664e3);
          border-color: var(--billhive-accent-hover, #5664e3);
          box-shadow: var(--billhive-button-shadow, 0 2px 4px rgba(101, 118, 255, 0.3));
          transform: translateY(-1px);
        }

        .btn-primary:focus {
          outline: 0;
          box-shadow: var(--billhive-button-shadow, 0 0 0 0.2rem rgba(101, 118, 255, 0.25));
        }

        .btn-primary:active {
          transform: translateY(0);
          box-shadow: var(--billhive-button-shadow, 0 1px 2px rgba(101, 118, 255, 0.2));
        }
      </style>
    `}}customElements.define("bh-plan-selector",$),typeof module<"u"&&module.exports&&(module.exports=$)})();
